{
  "contractName": "ResolverV1",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "node",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "contentType",
          "type": "uint256"
        }
      ],
      "name": "ABIChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "node",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "a",
          "type": "address"
        }
      ],
      "name": "AddrChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "node",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "coinType",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "newAddress",
          "type": "bytes"
        }
      ],
      "name": "AddressChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "node",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isAuthorised",
          "type": "bool"
        }
      ],
      "name": "AuthorisationChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "node",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "hash",
          "type": "bytes"
        }
      ],
      "name": "ContenthashChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "node",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes4",
          "name": "interfaceID",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "implementer",
          "type": "address"
        }
      ],
      "name": "InterfaceChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "node",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "x",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "y",
          "type": "bytes32"
        }
      ],
      "name": "PubkeyChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "node",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "indexedKey",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        }
      ],
      "name": "TextChanged",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "node",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "contentTypes",
          "type": "uint256"
        }
      ],
      "name": "ABI",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "node",
          "type": "bytes32"
        }
      ],
      "name": "addr",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "node",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "coinType",
          "type": "uint256"
        }
      ],
      "name": "addr",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "authorisations",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "node",
          "type": "bytes32"
        }
      ],
      "name": "contenthash",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "node",
          "type": "bytes32"
        },
        {
          "internalType": "bytes4",
          "name": "interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "interfaceImplementer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "node",
          "type": "bytes32"
        }
      ],
      "name": "pubkey",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "x",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "y",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rns",
      "outputs": [
        {
          "internalType": "contract AbstractRNS",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "node",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "contentType",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "setABI",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "node",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "coinType",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "a",
          "type": "bytes"
        }
      ],
      "name": "setAddr",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "node",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "a",
          "type": "address"
        }
      ],
      "name": "setAddr",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "node",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "hash",
          "type": "bytes"
        }
      ],
      "name": "setContenthash",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "node",
          "type": "bytes32"
        },
        {
          "internalType": "bytes4",
          "name": "interfaceID",
          "type": "bytes4"
        },
        {
          "internalType": "address",
          "name": "implementer",
          "type": "address"
        }
      ],
      "name": "setInterface",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "node",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "x",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "y",
          "type": "bytes32"
        }
      ],
      "name": "setPubkey",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "node",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "value",
          "type": "string"
        }
      ],
      "name": "setText",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "node",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "key",
          "type": "string"
        }
      ],
      "name": "text",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract AbstractRNS",
          "name": "_rns",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "node",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isAuthorised",
          "type": "bool"
        }
      ],
      "name": "setAuthorisation",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"contentType\",\"type\":\"uint256\"}],\"name\":\"ABIChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"AddrChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"coinType\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"newAddress\",\"type\":\"bytes\"}],\"name\":\"AddressChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isAuthorised\",\"type\":\"bool\"}],\"name\":\"AuthorisationChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"hash\",\"type\":\"bytes\"}],\"name\":\"ContenthashChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"InterfaceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"x\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"y\",\"type\":\"bytes32\"}],\"name\":\"PubkeyChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"indexedKey\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"TextChanged\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"contentTypes\",\"type\":\"uint256\"}],\"name\":\"ABI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"coinType\",\"type\":\"uint256\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorisations\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"contenthash\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract AbstractRNS\",\"name\":\"_rns\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"interfaceImplementer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"pubkey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"x\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"y\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rns\",\"outputs\":[{\"internalType\":\"contract AbstractRNS\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"contentType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"setABI\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"coinType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"a\",\"type\":\"bytes\"}],\"name\":\"setAddr\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"setAddr\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAuthorised\",\"type\":\"bool\"}],\"name\":\"setAuthorisation\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"hash\",\"type\":\"bytes\"}],\"name\":\"setContenthash\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"setInterface\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"x\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"y\",\"type\":\"bytes32\"}],\"name\":\"setPubkey\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"setText\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"text\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A public resolver implementation. This implementation can be as an openzeppelin/upgrades v2.8 proxy contract implementation. Source: https://github.com/ensdomains/resolvers/blob/9c3ed5377501d77738089c81c2a0b141878048f9/contracts/PublicResolver.sol\",\"methods\":{\"ABI(bytes32,uint256)\":{\"params\":{\"contentTypes\":\"A bitwise OR of the ABI formats accepted by the caller.\",\"node\":\"The ENS node to query\"},\"return\":\"contentType The content type of the return valuedata The ABI data\"},\"addr(bytes32)\":{\"params\":{\"node\":\"The RNS node to query.\"},\"return\":\"The associated address.\"},\"contenthash(bytes32)\":{\"params\":{\"node\":\"The ENS node to query.\"},\"return\":\"The associated contenthash.\"},\"initialize(address)\":{\"details\":\"Replace the usage of a constructor.\",\"params\":{\"_rns\":\"the RNS Registry address.\"}},\"interfaceImplementer(bytes32,bytes4)\":{\"params\":{\"interfaceID\":\"The EIP 168 interface ID to check for.\",\"node\":\"The ENS node to query.\"},\"return\":\"The address that implements this interface, or 0 if the interface is unsupported.\"},\"pubkey(bytes32)\":{\"params\":{\"node\":\"The ENS node to query\"},\"return\":\"x, y the X and Y coordinates of the curve point for the public key.\"},\"setABI(bytes32,uint256,bytes)\":{\"params\":{\"contentType\":\"The content type of the ABI\",\"data\":\"The ABI data.\",\"node\":\"The node to update.\"}},\"setAddr(bytes32,address)\":{\"params\":{\"a\":\"The address to set.\",\"node\":\"The node to update.\"}},\"setAddr(bytes32,uint256,bytes)\":{\"params\":{\"a\":\"The address to set.\",\"coinType\":\"slip0044 coin type.\",\"node\":\"The node to update.\"}},\"setAuthorisation(bytes32,address,bool)\":{\"details\":\"Sets or clears an authorisation. Authorisations are specific to the caller. Any account can set an authorisation for any name, but the authorisation that is checked will be that of the current owner of a name. Thus, transferring a name effectively clears any existing authorisations, and new authorisations can be set in advance of an ownership transfer if desired.\",\"params\":{\"isAuthorised\":\"True if the address should be authorised, or false if it should be deauthorised.\",\"node\":\"The name to change the authorisation on.\",\"target\":\"The address that is to be authorised or deauthorised.\"}},\"setContenthash(bytes32,bytes)\":{\"params\":{\"hash\":\"The contenthash to set\",\"node\":\"The node to update.\"}},\"setInterface(bytes32,bytes4,address)\":{\"params\":{\"implementer\":\"The address of a contract that implements this interface for this node.\",\"interfaceID\":\"The EIP 168 interface ID.\",\"node\":\"The node to update.\"}},\"setPubkey(bytes32,bytes32,bytes32)\":{\"params\":{\"node\":\"The ENS node to query\",\"x\":\"the X coordinate of the curve point for the public key.\",\"y\":\"the Y coordinate of the curve point for the public key.\"}},\"setText(bytes32,string,string)\":{\"params\":{\"key\":\"The key to set.\",\"node\":\"The node to update.\",\"value\":\"The text data value to set.\"}},\"text(bytes32,string)\":{\"params\":{\"key\":\"The text data key to query.\",\"node\":\"The ENS node to query.\"},\"return\":\"The associated text data.\"}},\"title\":\"ResolverV1\"},\"userdoc\":{\"methods\":{\"ABI(bytes32,uint256)\":{\"notice\":\"Returns the ABI associated with an ENS node. Defined in EIP205.\"},\"addr(bytes32)\":{\"notice\":\"Returns the address associated with an RNS node.\"},\"contenthash(bytes32)\":{\"notice\":\"Returns the contenthash associated with an ENS node.\"},\"initialize(address)\":{\"notice\":\"Initializes the contract.\"},\"interfaceImplementer(bytes32,bytes4)\":{\"notice\":\"Returns the address of a contract that implements the specified interface for this name. If an implementer has not been set for this interfaceID and name, the resolver will query the contract at `addr()`. If `addr()` is set, a contract exists at that address, and that contract implements EIP168 and returns `true` for the specified interfaceID, its address will be returned.\"},\"pubkey(bytes32)\":{\"notice\":\"Returns the SECP256k1 public key associated with an ENS node. Defined in EIP 619.\"},\"setABI(bytes32,uint256,bytes)\":{\"notice\":\"Sets the ABI associated with an ENS node. Nodes may have one ABI of each content type. To remove an ABI, set it to the empty string.\"},\"setAddr(bytes32,address)\":{\"notice\":\"Sets the address associated with an RNS node.\"},\"setAddr(bytes32,uint256,bytes)\":{\"notice\":\"Sets the coin address associated with an RNS node .\"},\"setContenthash(bytes32,bytes)\":{\"notice\":\"Sets the contenthash associated with an ENS node. May only be called by the owner of that node in the ENS registry.\"},\"setInterface(bytes32,bytes4,address)\":{\"notice\":\"Sets an interface associated with a name. Setting the address to 0 restores the default behaviour of querying the contract at `addr()` for interface support.\"},\"setPubkey(bytes32,bytes32,bytes32)\":{\"notice\":\"Sets the SECP256k1 public key associated with an ENS node.\"},\"setText(bytes32,string,string)\":{\"notice\":\"Sets the text data associated with an ENS node and key. May only be called by the owner of that node in the ENS registry.\"},\"text(bytes32,string)\":{\"notice\":\"Returns the text data associated with an ENS node and key.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/sergiojara/Developer/iov/rns-resolver/contracts/ResolverV1.sol\":\"ResolverV1\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/sergiojara/Developer/iov/rns-resolver/contracts/RSKAddrResolver.sol\":{\"keccak256\":\"0x7ae2a71a9271bae46c5b0de64321996ef4106b963f40c76032c29b256833a777\",\"urls\":[\"bzz-raw://405233193eac5e1237d13ca12388b7fac18eaed3528b9325a627877055efa2e6\",\"dweb:/ipfs/QmPN7mz2fEFeiTHYLQfcJrjxE4uCwwgetaVBEWVG3runZq\"]},\"/Users/sergiojara/Developer/iov/rns-resolver/contracts/ResolverV1.sol\":{\"keccak256\":\"0x79f474dd49a4b894f89d2e0bcb5945ba3ceef616dc1319f44dd5dc7e4a6a6419\",\"urls\":[\"bzz-raw://54232c6a03f3642d6b783d93fe7270b7d68464a306665bf05c258beba304a24b\",\"dweb:/ipfs/QmeENdyRAp4G543p4fdNbcQRsfaCM4NhPZ9NmeuSKiVwUi\"]},\"@ensdomains/resolver/contracts/ResolverBase.sol\":{\"keccak256\":\"0xfc7d550960829127576d6fc3080513d74ef18a6d7057d0d9262ce071890053e8\",\"urls\":[\"bzz-raw://dc477afd53175b96112bb0e2e25ce85b1f7c0e3fe0da4a2e8539d86712583b00\",\"dweb:/ipfs/QmQdwwHEcNMxTWtkrNpkbxtokwiFDdQ5xwPYcuZPRbJQKp\"]},\"@ensdomains/resolver/contracts/profiles/ABIResolver.sol\":{\"keccak256\":\"0x794514d39c469bab511822ca7a1a7a7838dca338499889896c7dac4303c30c1f\",\"urls\":[\"bzz-raw://3668c3ec6be58cf6bbbe2cfcb8e286927fa5ab028d501c8b26d2eeb816ce7303\",\"dweb:/ipfs/Qme7RMhhcFxa1xzhJz24s3rdW2VePsPdJhFgQbAiieMjKz\"]},\"@ensdomains/resolver/contracts/profiles/AddrResolver.sol\":{\"keccak256\":\"0xbe84f840b10f6ddc3d695d5905fe4034569c646bdf56b1367c16271aa92071c6\",\"urls\":[\"bzz-raw://e137983721b6fb0864aabf3df090776f7bfb273a25b2f48f8e3033a41e0e2954\",\"dweb:/ipfs/QmdDNEseR3X6eYRDyorT9MUvTXYz6LhxBqFsfLQk5dYZfC\"]},\"@ensdomains/resolver/contracts/profiles/ContentHashResolver.sol\":{\"keccak256\":\"0xaa3d9b9baae36fbf831b8297832b54ffd1023b9ac508f2c5068b92ce0c30edfc\",\"urls\":[\"bzz-raw://a30f83bbf8d55051bdc0b151131e5dca4966fe87f36648f9bf3e580d81d85fa2\",\"dweb:/ipfs/QmbWeakvTkEJTRxqFL6wZPDdN6Wqq1tSgCJiu861UbH3yH\"]},\"@ensdomains/resolver/contracts/profiles/InterfaceResolver.sol\":{\"keccak256\":\"0x6398dc59dd38501acd6a716173793e84aa1c454c3e21c190e10ddbe54dd8be41\",\"urls\":[\"bzz-raw://7b3af5c29db8d4c13631b3ec427e5dc6dee1a5df0560d36b32deda2451e4bc11\",\"dweb:/ipfs/QmXe2sWt31kEELa4VPU84QUUK6UDw6mQANc9gMVezoqioP\"]},\"@ensdomains/resolver/contracts/profiles/PubkeyResolver.sol\":{\"keccak256\":\"0xaa10a8a7e1579987b6781657153ae3f16806f240b3ffaa54ea1f303f7cb7a74a\",\"urls\":[\"bzz-raw://3ee3cbb2cca361819cea208485c718a3288cf9dc22762bb08c3dc445b60dc862\",\"dweb:/ipfs/QmeXyPzZHyPMSHvQPDsCtjdC3rMCTzZNWeYXaWqiDbdmSt\"]},\"@ensdomains/resolver/contracts/profiles/TextResolver.sol\":{\"keccak256\":\"0x1feb20d9466c52f471c57344c1e3792e2c69b24ab9d7f7a4de6e49912abc75bb\",\"urls\":[\"bzz-raw://c787f138408c8c92688fba4cff0aa55008cfcdf4fd4aeddd423539a8e81d3ff5\",\"dweb:/ipfs/QmeWyH35zABp9oSGw77W7Qp8HY2Fok86DwpkdmS1b6stWR\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]},\"@rsksmart/rns-registry/contracts/AbstractRNS.sol\":{\"keccak256\":\"0x1b7953310411bea4a5e9300ec0924f54e74ef77685bce624fdd2d71a61fd8413\",\"urls\":[\"bzz-raw://a9196f884e4904f3311a9f3bbfe485e550175397100988021d9e78f7723bb91d\",\"dweb:/ipfs/QmWoHcp7y1kNceEZW5YPzJnHnEUjVnbuNrwH6B32eERLC9\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50612b12806100206000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063663b44c5116100ad578063c869023311610071578063c869023314610364578063d5fa2b0014610395578063e59d895d146103b1578063f1cb7e06146103cd578063f86bc879146103fd5761012c565b8063663b44c5146102ae5780638b95dd71146102cc578063ac9650d8146102e8578063bc1c58d114610318578063c4d66de8146103485761012c565b8063304e6ade116100f4578063304e6ade146101fa5780633b3b57de146102165780633e9ce7941461024657806359d1d43c14610262578063623195b0146102925761012c565b806301ffc9a71461013157806310f13a8c14610161578063124a319c1461017d5780632203ab56146101ad57806329cd62ea146101de575b600080fd5b61014b60048036036101469190810190612219565b61042d565b6040516101589190612689565b60405180910390f35b61017b60048036036101769190810190612081565b61049a565b005b61019760048036036101929190810190611f46565b610548565b6040516101a49190612616565b60405180910390f35b6101c760048036036101c2919081019061210a565b610933565b6040516101d59291906127ca565b60405180910390f35b6101f860048036036101f39190810190611ef7565b610a83565b005b610214600480360361020f9190810190611fd1565b610b15565b005b610230600480360361022b9190810190611df4565b610b8b565b60405161023d919061264c565b60405180910390f35b610260600480360361025b9190810190611ea8565b610bc2565b005b61027c60048036036102779190810190612029565b610cd2565b6040516102899190612788565b60405180910390f35b6102ac60048036036102a79190810190612146565b610da7565b005b6102b6610e35565b6040516102c39190612749565b60405180910390f35b6102e660048036036102e191908101906121b2565b610e5b565b005b61030260048036036102fd9190810190611daf565b610f31565b60405161030f9190612667565b60405180910390f35b610332600480360361032d9190810190611df4565b611087565b60405161033f9190612727565b60405180910390f35b610362600480360361035d9190810190612242565b61113c565b005b61037e60048036036103799190810190611df4565b611267565b60405161038c9291906126bf565b60405180910390f35b6103af60048036036103aa9190810190611e1d565b6112a1565b005b6103cb60048036036103c69190810190611f82565b611374565b005b6103e760048036036103e2919081019061210a565b611486565b6040516103f49190612727565b60405180910390f35b61041760048036036104129190810190611e59565b61154d565b6040516104249190612689565b60405180910390f35b600060405161043b90612601565b60405180910390207bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610493575061049282611589565b5b9050919050565b846104a4816115ea565b6104ad57600080fd5b82826037600089815260200190815260200160002087876040516104d29291906125e8565b908152602001604051809103902091906104ed929190611a1c565b5084846040516104fe9291906125e8565b6040518091039020867fd8c9334b1a9c2f9da342a0a2b32629c1a229b6445dad78947f674b44444a75508787604051610538929190612764565b60405180910390a3505050505050565b600080603860008581526020019081526020016000206000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461060d578091505061092d565b600061061885610b8b565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561065a5760009250505061092d565b600060608273ffffffffffffffffffffffffffffffffffffffff166301ffc9a760e01b60405160240161068d91906126e8565b6040516020818303038152906040527f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161071791906125d1565b600060405180830381855afa9150503d8060008114610752576040519150601f19603f3d011682016040523d82523d6000602084013e610757565b606091505b509150915081158061076a575060208151105b806107b15750600060f81b81601f8151811061078257fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b156107c357600094505050505061092d565b8273ffffffffffffffffffffffffffffffffffffffff16866040516024016107eb91906126e8565b6040516020818303038152906040527f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161087591906125d1565b600060405180830381855afa9150503d80600081146108b0576040519150601f19603f3d011682016040523d82523d6000602084013e6108b5565b606091505b5080925081935050508115806108cc575060208151105b806109135750600060f81b81601f815181106108e457fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b1561092557600094505050505061092d565b829450505050505b92915050565b6000606060006035600086815260200190815260200160002090506000600190505b848111610a605760008582161415801561099557506000826000838152602001908152602001600020805460018160011615610100020316600290049050115b15610a545780826000838152602001908152602001600020808054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a425780601f10610a1757610100808354040283529160200191610a42565b820191906000526020600020905b815481529060010190602001808311610a2557829003601f168201915b50505050509050935093505050610a7c565b600181901b9050610955565b5060006040518060200160405280600081525081915092509250505b9250929050565b82610a8d816115ea565b610a9657600080fd5b604051806040016040528084815260200183815250603660008681526020019081526020016000206000820151816000015560208201518160010155905050837f1d6f5e03d3f63eb58751986629a5439baee5079ff04f345becb66e23eb154e468484604051610b079291906126bf565b60405180910390a250505050565b82610b1f816115ea565b610b2857600080fd5b8282603460008781526020019081526020016000209190610b4a929190611a9c565b50837fe379c1624ed7e714cc0937528a32359d69d5281337765313dba4e081b72d75788484604051610b7d929190612703565b60405180910390a250505050565b60006060610b9a836089611486565b9050600081511415610bb0576000915050610bbd565b610bb981611773565b9150505b919050565b80603a600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16847fe1c5610a6e0cbe10764ecd182adcef1ec338dc4e199c99c32ce98f38e12791df84604051610cc59190612689565b60405180910390a4505050565b6060603760008581526020019081526020016000208383604051610cf79291906125e8565b90815260200160405180910390208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d995780601f10610d6e57610100808354040283529160200191610d99565b820191906000526020600020905b815481529060010190602001808311610d7c57829003601f168201915b505050505090509392505050565b83610db1816115ea565b610dba57600080fd5b600084600186031614610dcc57600080fd5b82826035600088815260200190815260200160002060008781526020019081526020016000209190610dff929190611a9c565b5083857faa121bbeef5f32f5961a2a28966e769023910fc9479059ee3495d4c1a696efe360405160405180910390a35050505050565b603960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b82610e65816115ea565b610e6e57600080fd5b837f65412581168e88a1e60c6459d7f44ae83ad0832e670826c05a4e2476b57af7528484604051610ea09291906127ca565b60405180910390a26089831415610ef257837f52d7d861f09ab3d26239d492e8968629f95e9e318cf0b73bfddc441522a15fd2610edc84611773565b604051610ee99190612631565b60405180910390a25b816033600086815260200190815260200160002060008581526020019081526020016000209080519060200190610f2a929190611b1c565b5050505050565b606082829050604051908082528060200260200182016040528015610f6a57816020015b6060815260200190600190039081610f555790505b50905060008090505b8383905081101561107d57600060603073ffffffffffffffffffffffffffffffffffffffff16868685818110610fa557fe5b9050602002810180356001602003833603038112610fc257600080fd5b8083019250508135905060208201915067ffffffffffffffff811115610fe757600080fd5b600181023603821315610ff957600080fd5b6040516110079291906125b8565b600060405180830381855af49150503d8060008114611042576040519150601f19603f3d011682016040523d82523d6000602084013e611047565b606091505b50915091508161105657600080fd5b8084848151811061106357fe5b602002602001018190525050508080600101915050610f73565b5080905092915050565b6060603460008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111305780601f1061110557610100808354040283529160200191611130565b820191906000526020600020905b81548152906001019060200180831161111357829003601f168201915b50505050509050919050565b600060019054906101000a900460ff168061115b575061115a611796565b5b8061117257506000809054906101000a900460ff16155b6111b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111a8906127aa565b60405180910390fd5b60008060019054906101000a900460ff161590508015611201576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b81603960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080156112635760008060016101000a81548160ff0219169083151502179055505b5050565b6000806036600084815260200190815260200160002060000154603660008581526020019081526020016000206001015491509150915091565b816112ab816115ea565b6112b457600080fd5b60606112bf836117ad565b9050837f65412581168e88a1e60c6459d7f44ae83ad0832e670826c05a4e2476b57af7526089836040516112f49291906127ca565b60405180910390a2837f52d7d861f09ab3d26239d492e8968629f95e9e318cf0b73bfddc441522a15fd28460405161132c9190612616565b60405180910390a28060336000868152602001908152602001600020600060898152602001908152602001600020908051906020019061136d929190611b1c565b5050505050565b8261137e816115ea565b61138757600080fd5b81603860008681526020019081526020016000206000857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916847f7c69f06bea0bdef565b709e93a147836b0063ba2dd89f02d0b7e8d931e6a6daa846040516114789190612616565b60405180910390a350505050565b60606033600084815260200190815260200160002060008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115405780601f1061151557610100808354040283529160200191611540565b820191906000526020600020905b81548152906001019060200180831161152357829003601f168201915b5050505050905092915050565b603a602052826000526040600020602052816000526040600020602052806000526040600020600092509250509054906101000a900460ff1681565b60006359d1d43c60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806115e357506115e2826117f8565b5b9050919050565b600080603960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302571be3846040518263ffffffff1660e01b815260040161164891906126a4565b60206040518083038186803b15801561166057600080fd5b505afa158015611674573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506116989190810190611d86565b90503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148061176b5750603a600084815260200190815260200160002060008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b915050919050565b6000601482511461178357600080fd5b600c6101000a6020830151049050919050565b6000803090506000813b9050600081149250505090565b606060146040519080825280601f01601f1916602001820160405280156117e35781602001600182028038833980820191505090505b509050600c6101000a82026020820152919050565b600063c869023360e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480611852575061185182611859565b5b9050919050565b6000632203ab5660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806118b357506118b2826118ba565b5b9050919050565b600063bc1c58d160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061191457506119138261191b565b5b9050919050565b6000633b3b57de60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806119b4575063f1cb7e0660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806119c457506119c3826119cb565b5b9050919050565b60006301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611a5d57803560ff1916838001178555611a8b565b82800160010185558215611a8b579182015b82811115611a8a578235825591602001919060010190611a6f565b5b509050611a989190611b9c565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611add57803560ff1916838001178555611b0b565b82800160010185558215611b0b579182015b82811115611b0a578235825591602001919060010190611aef565b5b509050611b189190611b9c565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611b5d57805160ff1916838001178555611b8b565b82800160010185558215611b8b579182015b82811115611b8a578251825591602001919060010190611b6f565b5b509050611b989190611b9c565b5090565b611bbe91905b80821115611bba576000816000905550600101611ba2565b5090565b90565b600081359050611bd081612a45565b92915050565b600081519050611be581612a45565b92915050565b60008083601f840112611bfd57600080fd5b8235905067ffffffffffffffff811115611c1657600080fd5b602083019150836020820283011115611c2e57600080fd5b9250929050565b600081359050611c4481612a5c565b92915050565b600081359050611c5981612a73565b92915050565b600081359050611c6e81612a8a565b92915050565b60008083601f840112611c8657600080fd5b8235905067ffffffffffffffff811115611c9f57600080fd5b602083019150836001820283011115611cb757600080fd5b9250929050565b600082601f830112611ccf57600080fd5b8135611ce2611cdd82612827565b6127fa565b91508082526020830160208301858383011115611cfe57600080fd5b611d098382846129f2565b50505092915050565b600081359050611d2181612aa1565b92915050565b60008083601f840112611d3957600080fd5b8235905067ffffffffffffffff811115611d5257600080fd5b602083019150836001820283011115611d6a57600080fd5b9250929050565b600081359050611d8081612ab8565b92915050565b600060208284031215611d9857600080fd5b6000611da684828501611bd6565b91505092915050565b60008060208385031215611dc257600080fd5b600083013567ffffffffffffffff811115611ddc57600080fd5b611de885828601611beb565b92509250509250929050565b600060208284031215611e0657600080fd5b6000611e1484828501611c4a565b91505092915050565b60008060408385031215611e3057600080fd5b6000611e3e85828601611c4a565b9250506020611e4f85828601611bc1565b9150509250929050565b600080600060608486031215611e6e57600080fd5b6000611e7c86828701611c4a565b9350506020611e8d86828701611bc1565b9250506040611e9e86828701611bc1565b9150509250925092565b600080600060608486031215611ebd57600080fd5b6000611ecb86828701611c4a565b9350506020611edc86828701611bc1565b9250506040611eed86828701611c35565b9150509250925092565b600080600060608486031215611f0c57600080fd5b6000611f1a86828701611c4a565b9350506020611f2b86828701611c4a565b9250506040611f3c86828701611c4a565b9150509250925092565b60008060408385031215611f5957600080fd5b6000611f6785828601611c4a565b9250506020611f7885828601611c5f565b9150509250929050565b600080600060608486031215611f9757600080fd5b6000611fa586828701611c4a565b9350506020611fb686828701611c5f565b9250506040611fc786828701611bc1565b9150509250925092565b600080600060408486031215611fe657600080fd5b6000611ff486828701611c4a565b935050602084013567ffffffffffffffff81111561201157600080fd5b61201d86828701611c74565b92509250509250925092565b60008060006040848603121561203e57600080fd5b600061204c86828701611c4a565b935050602084013567ffffffffffffffff81111561206957600080fd5b61207586828701611d27565b92509250509250925092565b60008060008060006060868803121561209957600080fd5b60006120a788828901611c4a565b955050602086013567ffffffffffffffff8111156120c457600080fd5b6120d088828901611d27565b9450945050604086013567ffffffffffffffff8111156120ef57600080fd5b6120fb88828901611d27565b92509250509295509295909350565b6000806040838503121561211d57600080fd5b600061212b85828601611c4a565b925050602061213c85828601611d71565b9150509250929050565b6000806000806060858703121561215c57600080fd5b600061216a87828801611c4a565b945050602061217b87828801611d71565b935050604085013567ffffffffffffffff81111561219857600080fd5b6121a487828801611c74565b925092505092959194509250565b6000806000606084860312156121c757600080fd5b60006121d586828701611c4a565b93505060206121e686828701611d71565b925050604084013567ffffffffffffffff81111561220357600080fd5b61220f86828701611cbe565b9150509250925092565b60006020828403121561222b57600080fd5b600061223984828501611c5f565b91505092915050565b60006020828403121561225457600080fd5b600061226284828501611d12565b91505092915050565b6000612277838361240a565b905092915050565b61228881612998565b82525050565b61229781612908565b82525050565b6122a6816128f6565b82525050565b60006122b782612863565b6122c1818561289c565b9350836020820285016122d385612853565b8060005b8581101561230f57848403895281516122f0858261226b565b94506122fb8361288f565b925060208a019950506001810190506122d7565b50829750879550505050505092915050565b61232a8161291a565b82525050565b61233981612926565b82525050565b61234881612930565b82525050565b600061235a83856128be565b93506123678385846129f2565b61237083612a34565b840190509392505050565b600061238783856128cf565b93506123948385846129f2565b82840190509392505050565b60006123ab82612879565b6123b581856128be565b93506123c5818560208601612a01565b6123ce81612a34565b840191505092915050565b60006123e482612879565b6123ee81856128cf565b93506123fe818560208601612a01565b80840191505092915050565b60006124158261286e565b61241f81856128ad565b935061242f818560208601612a01565b61243881612a34565b840191505092915050565b61244c816129aa565b82525050565b600061245e83856128da565b935061246b8385846129f2565b61247483612a34565b840190509392505050565b600061248b83856128eb565b93506124988385846129f2565b82840190509392505050565b60006124af82612884565b6124b981856128da565b93506124c9818560208601612a01565b6124d281612a34565b840191505092915050565b60006124ea6024836128eb565b91507f696e74657266616365496d706c656d656e74657228627974657333322c62797460008301527f65733429000000000000000000000000000000000000000000000000000000006020830152602482019050919050565b6000612550602e836128da565b91507f436f6e747261637420696e7374616e63652068617320616c726561647920626560008301527f656e20696e697469616c697a65640000000000000000000000000000000000006020830152604082019050919050565b6125b28161298e565b82525050565b60006125c582848661237b565b91508190509392505050565b60006125dd82846123d9565b915081905092915050565b60006125f582848661247f565b91508190509392505050565b600061260c826124dd565b9150819050919050565b600060208201905061262b600083018461229d565b92915050565b6000602082019050612646600083018461227f565b92915050565b6000602082019050612661600083018461228e565b92915050565b6000602082019050818103600083015261268181846122ac565b905092915050565b600060208201905061269e6000830184612321565b92915050565b60006020820190506126b96000830184612330565b92915050565b60006040820190506126d46000830185612330565b6126e16020830184612330565b9392505050565b60006020820190506126fd600083018461233f565b92915050565b6000602082019050818103600083015261271e81848661234e565b90509392505050565b6000602082019050818103600083015261274181846123a0565b905092915050565b600060208201905061275e6000830184612443565b92915050565b6000602082019050818103600083015261277f818486612452565b90509392505050565b600060208201905081810360008301526127a281846124a4565b905092915050565b600060208201905081810360008301526127c381612543565b9050919050565b60006040820190506127df60008301856125a9565b81810360208301526127f181846123a0565b90509392505050565b6000604051905081810181811067ffffffffffffffff8211171561281d57600080fd5b8060405250919050565b600067ffffffffffffffff82111561283e57600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b60006129018261296e565b9050919050565b60006129138261296e565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000612967826128f6565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006129a3826129ce565b9050919050565b60006129b5826129bc565b9050919050565b60006129c78261296e565b9050919050565b60006129d9826129e0565b9050919050565b60006129eb8261296e565b9050919050565b82818337600083830152505050565b60005b83811015612a1f578082015181840152602081019050612a04565b83811115612a2e576000848401525b50505050565b6000601f19601f8301169050919050565b612a4e816128f6565b8114612a5957600080fd5b50565b612a658161291a565b8114612a7057600080fd5b50565b612a7c81612926565b8114612a8757600080fd5b50565b612a9381612930565b8114612a9e57600080fd5b50565b612aaa8161295c565b8114612ab557600080fd5b50565b612ac18161298e565b8114612acc57600080fd5b5056fea365627a7a72315820aa74d01ff956d35d4b6a8582869a1dab5f038f463851920f4c5e1fbbe20764c76c6578706572696d656e74616cf564736f6c63430005100040",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061012c5760003560e01c8063663b44c5116100ad578063c869023311610071578063c869023314610364578063d5fa2b0014610395578063e59d895d146103b1578063f1cb7e06146103cd578063f86bc879146103fd5761012c565b8063663b44c5146102ae5780638b95dd71146102cc578063ac9650d8146102e8578063bc1c58d114610318578063c4d66de8146103485761012c565b8063304e6ade116100f4578063304e6ade146101fa5780633b3b57de146102165780633e9ce7941461024657806359d1d43c14610262578063623195b0146102925761012c565b806301ffc9a71461013157806310f13a8c14610161578063124a319c1461017d5780632203ab56146101ad57806329cd62ea146101de575b600080fd5b61014b60048036036101469190810190612219565b61042d565b6040516101589190612689565b60405180910390f35b61017b60048036036101769190810190612081565b61049a565b005b61019760048036036101929190810190611f46565b610548565b6040516101a49190612616565b60405180910390f35b6101c760048036036101c2919081019061210a565b610933565b6040516101d59291906127ca565b60405180910390f35b6101f860048036036101f39190810190611ef7565b610a83565b005b610214600480360361020f9190810190611fd1565b610b15565b005b610230600480360361022b9190810190611df4565b610b8b565b60405161023d919061264c565b60405180910390f35b610260600480360361025b9190810190611ea8565b610bc2565b005b61027c60048036036102779190810190612029565b610cd2565b6040516102899190612788565b60405180910390f35b6102ac60048036036102a79190810190612146565b610da7565b005b6102b6610e35565b6040516102c39190612749565b60405180910390f35b6102e660048036036102e191908101906121b2565b610e5b565b005b61030260048036036102fd9190810190611daf565b610f31565b60405161030f9190612667565b60405180910390f35b610332600480360361032d9190810190611df4565b611087565b60405161033f9190612727565b60405180910390f35b610362600480360361035d9190810190612242565b61113c565b005b61037e60048036036103799190810190611df4565b611267565b60405161038c9291906126bf565b60405180910390f35b6103af60048036036103aa9190810190611e1d565b6112a1565b005b6103cb60048036036103c69190810190611f82565b611374565b005b6103e760048036036103e2919081019061210a565b611486565b6040516103f49190612727565b60405180910390f35b61041760048036036104129190810190611e59565b61154d565b6040516104249190612689565b60405180910390f35b600060405161043b90612601565b60405180910390207bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610493575061049282611589565b5b9050919050565b846104a4816115ea565b6104ad57600080fd5b82826037600089815260200190815260200160002087876040516104d29291906125e8565b908152602001604051809103902091906104ed929190611a1c565b5084846040516104fe9291906125e8565b6040518091039020867fd8c9334b1a9c2f9da342a0a2b32629c1a229b6445dad78947f674b44444a75508787604051610538929190612764565b60405180910390a3505050505050565b600080603860008581526020019081526020016000206000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461060d578091505061092d565b600061061885610b8b565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561065a5760009250505061092d565b600060608273ffffffffffffffffffffffffffffffffffffffff166301ffc9a760e01b60405160240161068d91906126e8565b6040516020818303038152906040527f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161071791906125d1565b600060405180830381855afa9150503d8060008114610752576040519150601f19603f3d011682016040523d82523d6000602084013e610757565b606091505b509150915081158061076a575060208151105b806107b15750600060f81b81601f8151811061078257fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b156107c357600094505050505061092d565b8273ffffffffffffffffffffffffffffffffffffffff16866040516024016107eb91906126e8565b6040516020818303038152906040527f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161087591906125d1565b600060405180830381855afa9150503d80600081146108b0576040519150601f19603f3d011682016040523d82523d6000602084013e6108b5565b606091505b5080925081935050508115806108cc575060208151105b806109135750600060f81b81601f815181106108e457fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b1561092557600094505050505061092d565b829450505050505b92915050565b6000606060006035600086815260200190815260200160002090506000600190505b848111610a605760008582161415801561099557506000826000838152602001908152602001600020805460018160011615610100020316600290049050115b15610a545780826000838152602001908152602001600020808054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a425780601f10610a1757610100808354040283529160200191610a42565b820191906000526020600020905b815481529060010190602001808311610a2557829003601f168201915b50505050509050935093505050610a7c565b600181901b9050610955565b5060006040518060200160405280600081525081915092509250505b9250929050565b82610a8d816115ea565b610a9657600080fd5b604051806040016040528084815260200183815250603660008681526020019081526020016000206000820151816000015560208201518160010155905050837f1d6f5e03d3f63eb58751986629a5439baee5079ff04f345becb66e23eb154e468484604051610b079291906126bf565b60405180910390a250505050565b82610b1f816115ea565b610b2857600080fd5b8282603460008781526020019081526020016000209190610b4a929190611a9c565b50837fe379c1624ed7e714cc0937528a32359d69d5281337765313dba4e081b72d75788484604051610b7d929190612703565b60405180910390a250505050565b60006060610b9a836089611486565b9050600081511415610bb0576000915050610bbd565b610bb981611773565b9150505b919050565b80603a600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16847fe1c5610a6e0cbe10764ecd182adcef1ec338dc4e199c99c32ce98f38e12791df84604051610cc59190612689565b60405180910390a4505050565b6060603760008581526020019081526020016000208383604051610cf79291906125e8565b90815260200160405180910390208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d995780601f10610d6e57610100808354040283529160200191610d99565b820191906000526020600020905b815481529060010190602001808311610d7c57829003601f168201915b505050505090509392505050565b83610db1816115ea565b610dba57600080fd5b600084600186031614610dcc57600080fd5b82826035600088815260200190815260200160002060008781526020019081526020016000209190610dff929190611a9c565b5083857faa121bbeef5f32f5961a2a28966e769023910fc9479059ee3495d4c1a696efe360405160405180910390a35050505050565b603960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b82610e65816115ea565b610e6e57600080fd5b837f65412581168e88a1e60c6459d7f44ae83ad0832e670826c05a4e2476b57af7528484604051610ea09291906127ca565b60405180910390a26089831415610ef257837f52d7d861f09ab3d26239d492e8968629f95e9e318cf0b73bfddc441522a15fd2610edc84611773565b604051610ee99190612631565b60405180910390a25b816033600086815260200190815260200160002060008581526020019081526020016000209080519060200190610f2a929190611b1c565b5050505050565b606082829050604051908082528060200260200182016040528015610f6a57816020015b6060815260200190600190039081610f555790505b50905060008090505b8383905081101561107d57600060603073ffffffffffffffffffffffffffffffffffffffff16868685818110610fa557fe5b9050602002810180356001602003833603038112610fc257600080fd5b8083019250508135905060208201915067ffffffffffffffff811115610fe757600080fd5b600181023603821315610ff957600080fd5b6040516110079291906125b8565b600060405180830381855af49150503d8060008114611042576040519150601f19603f3d011682016040523d82523d6000602084013e611047565b606091505b50915091508161105657600080fd5b8084848151811061106357fe5b602002602001018190525050508080600101915050610f73565b5080905092915050565b6060603460008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111305780601f1061110557610100808354040283529160200191611130565b820191906000526020600020905b81548152906001019060200180831161111357829003601f168201915b50505050509050919050565b600060019054906101000a900460ff168061115b575061115a611796565b5b8061117257506000809054906101000a900460ff16155b6111b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111a8906127aa565b60405180910390fd5b60008060019054906101000a900460ff161590508015611201576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b81603960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080156112635760008060016101000a81548160ff0219169083151502179055505b5050565b6000806036600084815260200190815260200160002060000154603660008581526020019081526020016000206001015491509150915091565b816112ab816115ea565b6112b457600080fd5b60606112bf836117ad565b9050837f65412581168e88a1e60c6459d7f44ae83ad0832e670826c05a4e2476b57af7526089836040516112f49291906127ca565b60405180910390a2837f52d7d861f09ab3d26239d492e8968629f95e9e318cf0b73bfddc441522a15fd28460405161132c9190612616565b60405180910390a28060336000868152602001908152602001600020600060898152602001908152602001600020908051906020019061136d929190611b1c565b5050505050565b8261137e816115ea565b61138757600080fd5b81603860008681526020019081526020016000206000857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916847f7c69f06bea0bdef565b709e93a147836b0063ba2dd89f02d0b7e8d931e6a6daa846040516114789190612616565b60405180910390a350505050565b60606033600084815260200190815260200160002060008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115405780601f1061151557610100808354040283529160200191611540565b820191906000526020600020905b81548152906001019060200180831161152357829003601f168201915b5050505050905092915050565b603a602052826000526040600020602052816000526040600020602052806000526040600020600092509250509054906101000a900460ff1681565b60006359d1d43c60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806115e357506115e2826117f8565b5b9050919050565b600080603960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302571be3846040518263ffffffff1660e01b815260040161164891906126a4565b60206040518083038186803b15801561166057600080fd5b505afa158015611674573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506116989190810190611d86565b90503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148061176b5750603a600084815260200190815260200160002060008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b915050919050565b6000601482511461178357600080fd5b600c6101000a6020830151049050919050565b6000803090506000813b9050600081149250505090565b606060146040519080825280601f01601f1916602001820160405280156117e35781602001600182028038833980820191505090505b509050600c6101000a82026020820152919050565b600063c869023360e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480611852575061185182611859565b5b9050919050565b6000632203ab5660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806118b357506118b2826118ba565b5b9050919050565b600063bc1c58d160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061191457506119138261191b565b5b9050919050565b6000633b3b57de60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806119b4575063f1cb7e0660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806119c457506119c3826119cb565b5b9050919050565b60006301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611a5d57803560ff1916838001178555611a8b565b82800160010185558215611a8b579182015b82811115611a8a578235825591602001919060010190611a6f565b5b509050611a989190611b9c565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611add57803560ff1916838001178555611b0b565b82800160010185558215611b0b579182015b82811115611b0a578235825591602001919060010190611aef565b5b509050611b189190611b9c565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611b5d57805160ff1916838001178555611b8b565b82800160010185558215611b8b579182015b82811115611b8a578251825591602001919060010190611b6f565b5b509050611b989190611b9c565b5090565b611bbe91905b80821115611bba576000816000905550600101611ba2565b5090565b90565b600081359050611bd081612a45565b92915050565b600081519050611be581612a45565b92915050565b60008083601f840112611bfd57600080fd5b8235905067ffffffffffffffff811115611c1657600080fd5b602083019150836020820283011115611c2e57600080fd5b9250929050565b600081359050611c4481612a5c565b92915050565b600081359050611c5981612a73565b92915050565b600081359050611c6e81612a8a565b92915050565b60008083601f840112611c8657600080fd5b8235905067ffffffffffffffff811115611c9f57600080fd5b602083019150836001820283011115611cb757600080fd5b9250929050565b600082601f830112611ccf57600080fd5b8135611ce2611cdd82612827565b6127fa565b91508082526020830160208301858383011115611cfe57600080fd5b611d098382846129f2565b50505092915050565b600081359050611d2181612aa1565b92915050565b60008083601f840112611d3957600080fd5b8235905067ffffffffffffffff811115611d5257600080fd5b602083019150836001820283011115611d6a57600080fd5b9250929050565b600081359050611d8081612ab8565b92915050565b600060208284031215611d9857600080fd5b6000611da684828501611bd6565b91505092915050565b60008060208385031215611dc257600080fd5b600083013567ffffffffffffffff811115611ddc57600080fd5b611de885828601611beb565b92509250509250929050565b600060208284031215611e0657600080fd5b6000611e1484828501611c4a565b91505092915050565b60008060408385031215611e3057600080fd5b6000611e3e85828601611c4a565b9250506020611e4f85828601611bc1565b9150509250929050565b600080600060608486031215611e6e57600080fd5b6000611e7c86828701611c4a565b9350506020611e8d86828701611bc1565b9250506040611e9e86828701611bc1565b9150509250925092565b600080600060608486031215611ebd57600080fd5b6000611ecb86828701611c4a565b9350506020611edc86828701611bc1565b9250506040611eed86828701611c35565b9150509250925092565b600080600060608486031215611f0c57600080fd5b6000611f1a86828701611c4a565b9350506020611f2b86828701611c4a565b9250506040611f3c86828701611c4a565b9150509250925092565b60008060408385031215611f5957600080fd5b6000611f6785828601611c4a565b9250506020611f7885828601611c5f565b9150509250929050565b600080600060608486031215611f9757600080fd5b6000611fa586828701611c4a565b9350506020611fb686828701611c5f565b9250506040611fc786828701611bc1565b9150509250925092565b600080600060408486031215611fe657600080fd5b6000611ff486828701611c4a565b935050602084013567ffffffffffffffff81111561201157600080fd5b61201d86828701611c74565b92509250509250925092565b60008060006040848603121561203e57600080fd5b600061204c86828701611c4a565b935050602084013567ffffffffffffffff81111561206957600080fd5b61207586828701611d27565b92509250509250925092565b60008060008060006060868803121561209957600080fd5b60006120a788828901611c4a565b955050602086013567ffffffffffffffff8111156120c457600080fd5b6120d088828901611d27565b9450945050604086013567ffffffffffffffff8111156120ef57600080fd5b6120fb88828901611d27565b92509250509295509295909350565b6000806040838503121561211d57600080fd5b600061212b85828601611c4a565b925050602061213c85828601611d71565b9150509250929050565b6000806000806060858703121561215c57600080fd5b600061216a87828801611c4a565b945050602061217b87828801611d71565b935050604085013567ffffffffffffffff81111561219857600080fd5b6121a487828801611c74565b925092505092959194509250565b6000806000606084860312156121c757600080fd5b60006121d586828701611c4a565b93505060206121e686828701611d71565b925050604084013567ffffffffffffffff81111561220357600080fd5b61220f86828701611cbe565b9150509250925092565b60006020828403121561222b57600080fd5b600061223984828501611c5f565b91505092915050565b60006020828403121561225457600080fd5b600061226284828501611d12565b91505092915050565b6000612277838361240a565b905092915050565b61228881612998565b82525050565b61229781612908565b82525050565b6122a6816128f6565b82525050565b60006122b782612863565b6122c1818561289c565b9350836020820285016122d385612853565b8060005b8581101561230f57848403895281516122f0858261226b565b94506122fb8361288f565b925060208a019950506001810190506122d7565b50829750879550505050505092915050565b61232a8161291a565b82525050565b61233981612926565b82525050565b61234881612930565b82525050565b600061235a83856128be565b93506123678385846129f2565b61237083612a34565b840190509392505050565b600061238783856128cf565b93506123948385846129f2565b82840190509392505050565b60006123ab82612879565b6123b581856128be565b93506123c5818560208601612a01565b6123ce81612a34565b840191505092915050565b60006123e482612879565b6123ee81856128cf565b93506123fe818560208601612a01565b80840191505092915050565b60006124158261286e565b61241f81856128ad565b935061242f818560208601612a01565b61243881612a34565b840191505092915050565b61244c816129aa565b82525050565b600061245e83856128da565b935061246b8385846129f2565b61247483612a34565b840190509392505050565b600061248b83856128eb565b93506124988385846129f2565b82840190509392505050565b60006124af82612884565b6124b981856128da565b93506124c9818560208601612a01565b6124d281612a34565b840191505092915050565b60006124ea6024836128eb565b91507f696e74657266616365496d706c656d656e74657228627974657333322c62797460008301527f65733429000000000000000000000000000000000000000000000000000000006020830152602482019050919050565b6000612550602e836128da565b91507f436f6e747261637420696e7374616e63652068617320616c726561647920626560008301527f656e20696e697469616c697a65640000000000000000000000000000000000006020830152604082019050919050565b6125b28161298e565b82525050565b60006125c582848661237b565b91508190509392505050565b60006125dd82846123d9565b915081905092915050565b60006125f582848661247f565b91508190509392505050565b600061260c826124dd565b9150819050919050565b600060208201905061262b600083018461229d565b92915050565b6000602082019050612646600083018461227f565b92915050565b6000602082019050612661600083018461228e565b92915050565b6000602082019050818103600083015261268181846122ac565b905092915050565b600060208201905061269e6000830184612321565b92915050565b60006020820190506126b96000830184612330565b92915050565b60006040820190506126d46000830185612330565b6126e16020830184612330565b9392505050565b60006020820190506126fd600083018461233f565b92915050565b6000602082019050818103600083015261271e81848661234e565b90509392505050565b6000602082019050818103600083015261274181846123a0565b905092915050565b600060208201905061275e6000830184612443565b92915050565b6000602082019050818103600083015261277f818486612452565b90509392505050565b600060208201905081810360008301526127a281846124a4565b905092915050565b600060208201905081810360008301526127c381612543565b9050919050565b60006040820190506127df60008301856125a9565b81810360208301526127f181846123a0565b90509392505050565b6000604051905081810181811067ffffffffffffffff8211171561281d57600080fd5b8060405250919050565b600067ffffffffffffffff82111561283e57600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b60006129018261296e565b9050919050565b60006129138261296e565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000612967826128f6565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006129a3826129ce565b9050919050565b60006129b5826129bc565b9050919050565b60006129c78261296e565b9050919050565b60006129d9826129e0565b9050919050565b60006129eb8261296e565b9050919050565b82818337600083830152505050565b60005b83811015612a1f578082015181840152602081019050612a04565b83811115612a2e576000848401525b50505050565b6000601f19601f8301169050919050565b612a4e816128f6565b8114612a5957600080fd5b50565b612a658161291a565b8114612a7057600080fd5b50565b612a7c81612926565b8114612a8757600080fd5b50565b612a9381612930565b8114612a9e57600080fd5b50565b612aaa8161295c565b8114612ab557600080fd5b50565b612ac18161298e565b8114612acc57600080fd5b5056fea365627a7a72315820aa74d01ff956d35d4b6a8582869a1dab5f038f463851920f4c5e1fbbe20764c76c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "851:2356:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;851:2356:2;;;;;;;",
  "deployedSourceMap": "851:2356:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;851:2356:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2680:174:16;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;573:184:18;;;;;;;;;;;;;;;;:::i;:::-;;1721:953:16;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1195:454:13;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;612:169:17;;;;;;;;;;;;;;;;:::i;:::-;;505:166:15;;;;;;;;;;;;;;;;:::i;:::-;;876:229:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2405:231:2;;;;;;;;;;;;;;;;:::i;:::-;;974:127:18;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;582:292:13;;;;;;;;;;;;;;;;:::i;:::-;;994:22:2;;;:::i;:::-;;;;;;;;;;;;;;;;1304:286:1;;;;;;;;;;;;;;;;:::i;:::-;;2839:366:2;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;838:108:15;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1634:86:2;;;;;;;;;;;;;;;;:::i;:::-;;1023:133:17;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;465:252:1;;;;;;;;;;;;;;;;:::i;:::-;;858:226:16;;;;;;;;;;;;;;;;:::i;:::-;;1498:127:14;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1276:80:2;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2680:174:16;2747:4;204:49;;;;;;;;;;;;;;2770:37;;;:11;:37;;;;:77;;;;2811:36;2835:11;2811:23;:36::i;:::-;2770:77;2763:84;;2680:174;;;:::o;573:184:18:-;668:4;371:18:12;384:4;371:12;:18::i;:::-;363:27;;;;;;703:5:18;;684;:11;690:4;684:11;;;;;;;;;;;696:3;;684:16;;;;;;;;;;;;;;;;;;;;;:24;;;;;;;:::i;:::-;;741:3;;723:27;;;;;;;;;;;;;;;;735:4;723:27;746:3;;723:27;;;;;;;;;;;;;;;;573:184;;;;;;:::o;1721:953:16:-;1808:7;1827:19;1849:10;:16;1860:4;1849:16;;;;;;;;;;;:29;1866:11;1849:29;;;;;;;;;;;;;;;;;;;;;;;;;;;1827:51;;1914:1;1891:25;;:11;:25;;;1888:73;;1939:11;1932:18;;;;;1888:73;1971:9;1983:10;1988:4;1983;:10::i;:::-;1971:22;;2019:1;2006:15;;:1;:15;;;2003:62;;;2052:1;2037:17;;;;;;2003:62;2076:12;2090:23;2117:1;:12;;304:10;2183:17;;2130:71;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2130:71:16;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;2130:71:16;2117:85;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;2075:127:16;;;;2216:7;2215:8;:34;;;;2247:2;2227:10;:17;:22;2215:34;:57;;;;2271:1;2253:19;;:10;2264:2;2253:14;;;;;;;;;;;;;;;;:19;;;;2215:57;2212:151;;;2350:1;2335:17;;;;;;;;2212:151;2397:1;:12;;2463:11;2410:65;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2410:65:16;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;2410:65:16;2397:79;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;2373:103:16;;;;;;;;2490:7;2489:8;:34;;;;2521:2;2501:10;:17;:22;2489:34;:57;;;;2545:1;2527:19;;:10;2538:2;2527:14;;;;;;;;;;;;;;;;:19;;;;2489:57;2486:163;;;2636:1;2621:17;;;;;;;;2486:163;2666:1;2659:8;;;;;;1721:953;;;;;:::o;1195:454:13:-;1267:7;1276:12;1300:38;1341:4;:10;1346:4;1341:10;;;;;;;;;;;1300:51;;1367:19;1389:1;1367:23;;1362:249;1407:12;1392:11;:27;1362:249;;1490:1;1473:12;1459:11;:26;1458:33;;:67;;;;;1524:1;1495:6;:19;1502:11;1495:19;;;;;;;;;;;:26;;;;;;;;;;;;;;;;:30;1458:67;1454:147;;;1553:11;1566:6;:19;1573:11;1566:19;;;;;;;;;;;1545:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1454:147;1437:1;1421:17;;;;;1362:249;;;;1629:1;1632:9;;;;;;;;;;;;1621:21;;;;;;;;1195:454;;;;;;:::o;612:169:17:-;687:4;371:18:12;384:4;371:12;:18::i;:::-;363:27;;;;;;719:15:17;;;;;;;;729:1;719:15;;;;732:1;719:15;;;703:7;:13;711:4;703:13;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;;763:4;749:25;769:1;772;749:25;;;;;;;;;;;;;;;;612:169;;;;:::o;505:166:15:-;584:4;371:18:12;384:4;371:12;:18::i;:::-;363:27;;;;;;615:4:15;;600:6;:12;607:4;600:12;;;;;;;;;;;:19;;;;;;;:::i;:::-;;653:4;634:30;659:4;;634:30;;;;;;;;;;;;;;;;505:166;;;;:::o;876:229:1:-;925:15;952:14;969:25;974:4;311:3;969:4;:25::i;:::-;952:42;;1020:1;1008;:8;:13;1004:61;;;1052:1;1037:17;;;;;1004:61;1081:17;1096:1;1081:14;:17::i;:::-;1074:24;;;876:229;;;;:::o;2405:231:2:-;2542:12;2499:14;:20;2514:4;2499:20;;;;;;;;;;;:32;2520:10;2499:32;;;;;;;;;;;;;;;:40;2532:6;2499:40;;;;;;;;;;;;;;;;:55;;;;;;;;;;;;;;;;;;2608:6;2569:60;;2596:10;2569:60;;2590:4;2569:60;2616:12;2569:60;;;;;;;;;;;;;;;2405:231;;;:::o;974:127:18:-;1046:13;1078:5;:11;1084:4;1078:11;;;;;;;;;;;1090:3;;1078:16;;;;;;;;;;;;;;;;;;;;;1071:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;974:127;;;;;:::o;582:292:13:-;674:4;371:18:12;384:4;371:12;:18::i;:::-;363:27;;;;;;780:1:13;764:11;759:1;745:11;:15;744:31;743:38;735:47;;;;;;819:4;;793;:10;798:4;793:10;;;;;;;;;;;:23;804:11;793:23;;;;;;;;;;;:30;;;;;;;:::i;:::-;;855:11;849:4;838:29;;;;;;;;;;582:292;;;;;:::o;994:22:2:-;;;;;;;;;;;;;:::o;1304:286:1:-;1384:4;371:18:12;384:4;371:12;:18::i;:::-;363:27;;;;;;1420:4:1;1405:33;1426:8;1436:1;1405:33;;;;;;;;;;;;;;;;311:3;1451:8;:25;1448:96;;;1509:4;1497:36;1515:17;1530:1;1515:14;:17::i;:::-;1497:36;;;;;;;;;;;;;;;1448:96;1582:1;1553:10;:16;1564:4;1553:16;;;;;;;;;;;:26;1570:8;1553:26;;;;;;;;;;;:30;;;;;;;;;;;;:::i;:::-;;1304:286;;;;:::o;2839:366:2:-;2898:22;2954:4;;:11;;2942:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2932:34;;2980:6;2989:1;2980:10;;2976:199;2996:4;;:11;;2992:1;:15;2976:199;;;3029:12;3043:19;3074:4;3066:26;;3093:4;;3098:1;3093:7;;;;;;;;;;;;;43:11:-1;30:25;137:1;131:4;127:12;116:8;100:14;96:29;92:48;72:18;68:73;58:2;;155:1;152;145:12;58:2;188:18;178:8;174:33;162:45;;0:210;29:8;16:22;6:32;;69:4;59:8;55:19;43:31;;93:18;85:6;82:30;79:2;;;125:1;122;115:12;79:2;183:4;175:6;171:17;155:14;151:38;141:8;137:53;134:2;;;203:1;200;193:12;134:2;3066:35:2;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3028:73:2;;;;3123:7;3115:16;;;;;;3158:6;3145:7;3153:1;3145:10;;;;;;;;;;;;;:19;;;;2976:199;;3009:3;;;;;;;2976:199;;;;3191:7;3184:14;;2839:366;;;;:::o;838:108:15:-;896:12;927:6;:12;934:4;927:12;;;;;;;;;;;920:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;838:108;;;:::o;1634:86:2:-;1024:12:20;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;1709:4:2;1703:3;;:10;;;;;;;;;;;;;;;;;;1268:14:20;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;1634:86:2;;:::o;1023:133:17:-;1076:9;1087;1116:7;:13;1124:4;1116:13;;;;;;;;;;;:15;;;1133:7;:13;1141:4;1133:13;;;;;;;;;;;:15;;;1108:41;;;;1023:133;;;:::o;465:252:1:-;527:4;371:18:12;384:4;371:12;:18::i;:::-;363:27;;;;;;543:14:1;560:17;575:1;560:14;:17::i;:::-;543:34;;607:4;592:38;311:3;628:1;592:38;;;;;;;;;;;;;;;;657:4;645:20;663:1;645:20;;;;;;;;;;;;;;;709:1;675:10;:16;686:4;675:16;;;;;;;;;;;:31;311:3;675:31;;;;;;;;;;;:35;;;;;;;;;;;;:::i;:::-;;400:1:12;465:252:1;;;:::o;858:226:16:-;955:4;371:18:12;384:4;371:12;:18::i;:::-;363:27;;;;;;1003:11:16;971:10;:16;982:4;971:16;;;;;;;;;;;:29;988:11;971:29;;;;;;;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;1052:11;1029:48;;;1046:4;1029:48;1065:11;1029:48;;;;;;;;;;;;;;;858:226;;;;:::o;1498:127:14:-;1561:12;1592:10;:16;1603:4;1592:16;;;;;;;;;;;:26;1609:8;1592:26;;;;;;;;;;;1585:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1498:127;;;;:::o;1276:80:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1107:169:18:-;1174:4;144:10;1212:17;;1197:32;;;:11;:32;;;;:72;;;;1233:36;1257:11;1233:23;:36::i;:::-;1197:72;1190:79;;1107:169;;;:::o;2642:191:2:-;2700:4;2716:13;2732:3;;;;;;;;;;;:9;;;2742:4;2732:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2732:15:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2732:15:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2732:15:2;;;;;;;;;2716:31;;2773:10;2764:19;;:5;:19;;;:62;;;;2787:14;:20;2802:4;2787:20;;;;;;;;;;;:27;2808:5;2787:27;;;;;;;;;;;;;;;:39;2815:10;2787:39;;;;;;;;;;;;;;;;;;;;;;;;;2764:62;2757:69;;;2642:191;;;:::o;414:204:12:-;476:17;525:2;513:1;:8;:14;505:23;;;;;;598:2;593:3;589:12;583:2;580:1;576:10;570:17;566:36;561:41;;547:65;;;:::o;1409:498:20:-;1456:4;1797:12;1820:4;1797:28;;1831:10;1876:4;1864:17;1858:23;;1901:1;1895:2;:7;1888:14;;;;1409:498;:::o;624:189:12:-;681:14;721:2;711:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;711:13:12;;;;707:17;;792:2;787:3;783:12;780:1;776:20;771:2;768:1;764:10;757:40;743:64;;;:::o;1162:171:17:-;1229:4;148:10;1267:19;;1252:34;;;:11;:34;;;;:74;;;;1290:36;1314:11;1290:23;:36::i;:::-;1252:74;1245:81;;1162:171;;;:::o;1655:168:13:-;1722:4;142:10;1760:16;;1745:31;;;:11;:31;;;;:71;;;;1780:36;1804:11;1780:23;:36::i;:::-;1745:71;1738:78;;1655:168;;;:::o;952:177:15:-;1019:4;159:10;1057:25;;1042:40;;;:11;:40;;;;:80;;;;1086:36;1110:11;1086:23;:36::i;:::-;1042:80;1035:87;;952:177;;;:::o;1631:208:14:-;1698:4;144:10;1736:17;;1721:32;;;:11;:32;;;;:71;;;;207:10;1772:20;;1757:35;;;:11;:35;;;;1721:71;:111;;;;1796:36;1820:11;1796:23;:36::i;:::-;1721:111;1714:118;;1631:208;;;:::o;114:129:12:-;181:4;97:10;219:17;;204:32;;;:11;:32;;;;197:39;;114:129;;;:::o;851:2356:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;142:134;;226:6;220:13;211:22;;238:33;265:5;238:33;;;205:71;;;;;299:359;;;436:3;429:4;421:6;417:17;413:27;403:2;;454:1;451;444:12;403:2;487:6;474:20;464:30;;514:18;506:6;503:30;500:2;;;546:1;543;536:12;500:2;580:4;572:6;568:17;556:29;;631:3;623:4;615:6;611:17;601:8;597:32;594:41;591:2;;;648:1;645;638:12;591:2;396:262;;;;;;666:124;;743:6;730:20;721:29;;755:30;779:5;755:30;;;715:75;;;;;797:130;;877:6;864:20;855:29;;889:33;916:5;889:33;;;849:78;;;;;934:128;;1013:6;1000:20;991:29;;1025:32;1051:5;1025:32;;;985:77;;;;;1083:336;;;1197:3;1190:4;1182:6;1178:17;1174:27;1164:2;;1215:1;1212;1205:12;1164:2;1248:6;1235:20;1225:30;;1275:18;1267:6;1264:30;1261:2;;;1307:1;1304;1297:12;1261:2;1341:4;1333:6;1329:17;1317:29;;1392:3;1384:4;1376:6;1372:17;1362:8;1358:32;1355:41;1352:2;;;1409:1;1406;1399:12;1352:2;1157:262;;;;;;1428:440;;1529:3;1522:4;1514:6;1510:17;1506:27;1496:2;;1547:1;1544;1537:12;1496:2;1584:6;1571:20;1606:64;1621:48;1662:6;1621:48;;;1606:64;;;1597:73;;1690:6;1683:5;1676:21;1726:4;1718:6;1714:17;1759:4;1752:5;1748:16;1794:3;1785:6;1780:3;1776:16;1773:25;1770:2;;;1811:1;1808;1801:12;1770:2;1821:41;1855:6;1850:3;1845;1821:41;;;1489:379;;;;;;;;1876:170;;1976:6;1963:20;1954:29;;1988:53;2035:5;1988:53;;;1948:98;;;;;2068:337;;;2183:3;2176:4;2168:6;2164:17;2160:27;2150:2;;2201:1;2198;2191:12;2150:2;2234:6;2221:20;2211:30;;2261:18;2253:6;2250:30;2247:2;;;2293:1;2290;2283:12;2247:2;2327:4;2319:6;2315:17;2303:29;;2378:3;2370:4;2362:6;2358:17;2348:8;2344:32;2341:41;2338:2;;;2395:1;2392;2385:12;2338:2;2143:262;;;;;;2413:130;;2493:6;2480:20;2471:29;;2505:33;2532:5;2505:33;;;2465:78;;;;;2550:263;;2665:2;2653:9;2644:7;2640:23;2636:32;2633:2;;;2681:1;2678;2671:12;2633:2;2716:1;2733:64;2789:7;2780:6;2769:9;2765:22;2733:64;;;2723:74;;2695:108;2627:186;;;;;2820:411;;;2966:2;2954:9;2945:7;2941:23;2937:32;2934:2;;;2982:1;2979;2972:12;2934:2;3045:1;3034:9;3030:17;3017:31;3068:18;3060:6;3057:30;3054:2;;;3100:1;3097;3090:12;3054:2;3128:87;3207:7;3198:6;3187:9;3183:22;3128:87;;;3118:97;;;;2996:225;2928:303;;;;;;3238:241;;3342:2;3330:9;3321:7;3317:23;3313:32;3310:2;;;3358:1;3355;3348:12;3310:2;3393:1;3410:53;3455:7;3446:6;3435:9;3431:22;3410:53;;;3400:63;;3372:97;3304:175;;;;;3486:366;;;3607:2;3595:9;3586:7;3582:23;3578:32;3575:2;;;3623:1;3620;3613:12;3575:2;3658:1;3675:53;3720:7;3711:6;3700:9;3696:22;3675:53;;;3665:63;;3637:97;3765:2;3783:53;3828:7;3819:6;3808:9;3804:22;3783:53;;;3773:63;;3744:98;3569:283;;;;;;3859:491;;;;3997:2;3985:9;3976:7;3972:23;3968:32;3965:2;;;4013:1;4010;4003:12;3965:2;4048:1;4065:53;4110:7;4101:6;4090:9;4086:22;4065:53;;;4055:63;;4027:97;4155:2;4173:53;4218:7;4209:6;4198:9;4194:22;4173:53;;;4163:63;;4134:98;4263:2;4281:53;4326:7;4317:6;4306:9;4302:22;4281:53;;;4271:63;;4242:98;3959:391;;;;;;4357:485;;;;4492:2;4480:9;4471:7;4467:23;4463:32;4460:2;;;4508:1;4505;4498:12;4460:2;4543:1;4560:53;4605:7;4596:6;4585:9;4581:22;4560:53;;;4550:63;;4522:97;4650:2;4668:53;4713:7;4704:6;4693:9;4689:22;4668:53;;;4658:63;;4629:98;4758:2;4776:50;4818:7;4809:6;4798:9;4794:22;4776:50;;;4766:60;;4737:95;4454:388;;;;;;4849:491;;;;4987:2;4975:9;4966:7;4962:23;4958:32;4955:2;;;5003:1;5000;4993:12;4955:2;5038:1;5055:53;5100:7;5091:6;5080:9;5076:22;5055:53;;;5045:63;;5017:97;5145:2;5163:53;5208:7;5199:6;5188:9;5184:22;5163:53;;;5153:63;;5124:98;5253:2;5271:53;5316:7;5307:6;5296:9;5292:22;5271:53;;;5261:63;;5232:98;4949:391;;;;;;5347:364;;;5467:2;5455:9;5446:7;5442:23;5438:32;5435:2;;;5483:1;5480;5473:12;5435:2;5518:1;5535:53;5580:7;5571:6;5560:9;5556:22;5535:53;;;5525:63;;5497:97;5625:2;5643:52;5687:7;5678:6;5667:9;5663:22;5643:52;;;5633:62;;5604:97;5429:282;;;;;;5718:489;;;;5855:2;5843:9;5834:7;5830:23;5826:32;5823:2;;;5871:1;5868;5861:12;5823:2;5906:1;5923:53;5968:7;5959:6;5948:9;5944:22;5923:53;;;5913:63;;5885:97;6013:2;6031:52;6075:7;6066:6;6055:9;6051:22;6031:52;;;6021:62;;5992:97;6120:2;6138:53;6183:7;6174:6;6163:9;6159:22;6138:53;;;6128:63;;6099:98;5817:390;;;;;;6214:490;;;;6354:2;6342:9;6333:7;6329:23;6325:32;6322:2;;;6370:1;6367;6360:12;6322:2;6405:1;6422:53;6467:7;6458:6;6447:9;6443:22;6422:53;;;6412:63;;6384:97;6540:2;6529:9;6525:18;6512:32;6564:18;6556:6;6553:30;6550:2;;;6596:1;6593;6586:12;6550:2;6624:64;6680:7;6671:6;6660:9;6656:22;6624:64;;;6614:74;;;;6491:203;6316:388;;;;;;6711:492;;;;6852:2;6840:9;6831:7;6827:23;6823:32;6820:2;;;6868:1;6865;6858:12;6820:2;6903:1;6920:53;6965:7;6956:6;6945:9;6941:22;6920:53;;;6910:63;;6882:97;7038:2;7027:9;7023:18;7010:32;7062:18;7054:6;7051:30;7048:2;;;7094:1;7091;7084:12;7048:2;7122:65;7179:7;7170:6;7159:9;7155:22;7122:65;;;7112:75;;;;6989:204;6814:389;;;;;;7210:743;;;;;;7388:2;7376:9;7367:7;7363:23;7359:32;7356:2;;;7404:1;7401;7394:12;7356:2;7439:1;7456:53;7501:7;7492:6;7481:9;7477:22;7456:53;;;7446:63;;7418:97;7574:2;7563:9;7559:18;7546:32;7598:18;7590:6;7587:30;7584:2;;;7630:1;7627;7620:12;7584:2;7658:65;7715:7;7706:6;7695:9;7691:22;7658:65;;;7648:75;;;;7525:204;7788:2;7777:9;7773:18;7760:32;7812:18;7804:6;7801:30;7798:2;;;7844:1;7841;7834:12;7798:2;7872:65;7929:7;7920:6;7909:9;7905:22;7872:65;;;7862:75;;;;7739:204;7350:603;;;;;;;;;7960:366;;;8081:2;8069:9;8060:7;8056:23;8052:32;8049:2;;;8097:1;8094;8087:12;8049:2;8132:1;8149:53;8194:7;8185:6;8174:9;8170:22;8149:53;;;8139:63;;8111:97;8239:2;8257:53;8302:7;8293:6;8282:9;8278:22;8257:53;;;8247:63;;8218:98;8043:283;;;;;;8333:615;;;;;8490:2;8478:9;8469:7;8465:23;8461:32;8458:2;;;8506:1;8503;8496:12;8458:2;8541:1;8558:53;8603:7;8594:6;8583:9;8579:22;8558:53;;;8548:63;;8520:97;8648:2;8666:53;8711:7;8702:6;8691:9;8687:22;8666:53;;;8656:63;;8627:98;8784:2;8773:9;8769:18;8756:32;8808:18;8800:6;8797:30;8794:2;;;8840:1;8837;8830:12;8794:2;8868:64;8924:7;8915:6;8904:9;8900:22;8868:64;;;8858:74;;;;8735:203;8452:496;;;;;;;;8955:595;;;;9102:2;9090:9;9081:7;9077:23;9073:32;9070:2;;;9118:1;9115;9108:12;9070:2;9153:1;9170:53;9215:7;9206:6;9195:9;9191:22;9170:53;;;9160:63;;9132:97;9260:2;9278:53;9323:7;9314:6;9303:9;9299:22;9278:53;;;9268:63;;9239:98;9396:2;9385:9;9381:18;9368:32;9420:18;9412:6;9409:30;9406:2;;;9452:1;9449;9442:12;9406:2;9472:62;9526:7;9517:6;9506:9;9502:22;9472:62;;;9462:72;;9347:193;9064:486;;;;;;9557:239;;9660:2;9648:9;9639:7;9635:23;9631:32;9628:2;;;9676:1;9673;9666:12;9628:2;9711:1;9728:52;9772:7;9763:6;9752:9;9748:22;9728:52;;;9718:62;;9690:96;9622:174;;;;;9803:281;;9927:2;9915:9;9906:7;9902:23;9898:32;9895:2;;;9943:1;9940;9933:12;9895:2;9978:1;9995:73;10060:7;10051:6;10040:9;10036:22;9995:73;;;9985:83;;9957:117;9889:195;;;;;10092:177;;10203:60;10259:3;10251:6;10203:60;;;10189:74;;10182:87;;;;;10277:142;10368:45;10407:5;10368:45;;;10363:3;10356:58;10350:69;;;10426:137;10525:32;10551:5;10525:32;;;10520:3;10513:45;10507:56;;;10570:113;10653:24;10671:5;10653:24;;;10648:3;10641:37;10635:48;;;10717:888;;10872:59;10925:5;10872:59;;;10944:91;11028:6;11023:3;10944:91;;;10937:98;;11058:3;11100:4;11092:6;11088:17;11083:3;11079:27;11127:61;11182:5;11127:61;;;11208:7;11236:1;11221:345;11246:6;11243:1;11240:13;11221:345;;;11308:9;11302:4;11298:20;11293:3;11286:33;11353:6;11347:13;11375:74;11444:4;11429:13;11375:74;;;11367:82;;11466:65;11524:6;11466:65;;;11456:75;;11554:4;11549:3;11545:14;11538:21;;11278:288;11268:1;11265;11261:9;11256:14;;11221:345;;;11225:14;11579:4;11572:11;;11596:3;11589:10;;10851:754;;;;;;;;;;11613:104;11690:21;11705:5;11690:21;;;11685:3;11678:34;11672:45;;;11724:113;11807:24;11825:5;11807:24;;;11802:3;11795:37;11789:48;;;11844:110;11925:23;11942:5;11925:23;;;11920:3;11913:36;11907:47;;;11984:297;;12098:70;12161:6;12156:3;12098:70;;;12091:77;;12180:43;12216:6;12211:3;12204:5;12180:43;;;12245:29;12267:6;12245:29;;;12240:3;12236:39;12229:46;;12084:197;;;;;;12312:306;;12440:88;12521:6;12516:3;12440:88;;;12433:95;;12540:43;12576:6;12571:3;12564:5;12540:43;;;12605:6;12600:3;12596:16;12589:23;;12426:192;;;;;;12626:343;;12736:38;12768:5;12736:38;;;12786:70;12849:6;12844:3;12786:70;;;12779:77;;12861:52;12906:6;12901:3;12894:4;12887:5;12883:16;12861:52;;;12934:29;12956:6;12934:29;;;12929:3;12925:39;12918:46;;12716:253;;;;;;12976:356;;13104:38;13136:5;13104:38;;;13154:88;13235:6;13230:3;13154:88;;;13147:95;;13247:52;13292:6;13287:3;13280:4;13273:5;13269:16;13247:52;;;13320:6;13315:3;13311:16;13304:23;;13084:248;;;;;;13339:315;;13435:34;13463:5;13435:34;;;13481:60;13534:6;13529:3;13481:60;;;13474:67;;13546:52;13591:6;13586:3;13579:4;13572:5;13568:16;13546:52;;;13619:29;13641:6;13619:29;;;13614:3;13610:39;13603:46;;13415:239;;;;;;13661:166;13764:57;13815:5;13764:57;;;13759:3;13752:70;13746:81;;;13859:300;;13975:71;14039:6;14034:3;13975:71;;;13968:78;;14058:43;14094:6;14089:3;14082:5;14058:43;;;14123:29;14145:6;14123:29;;;14118:3;14114:39;14107:46;;13961:198;;;;;;14192:313;;14326:89;14408:6;14403:3;14326:89;;;14319:96;;14427:43;14463:6;14458:3;14451:5;14427:43;;;14492:6;14487:3;14483:16;14476:23;;14312:193;;;;;;14513:347;;14625:39;14658:5;14625:39;;;14676:71;14740:6;14735:3;14676:71;;;14669:78;;14752:52;14797:6;14792:3;14785:4;14778:5;14774:16;14752:52;;;14825:29;14847:6;14825:29;;;14820:3;14816:39;14809:46;;14605:255;;;;;;14868:409;;15046:85;15128:2;15123:3;15046:85;;;15039:92;;15164:34;15160:1;15155:3;15151:11;15144:55;15233:6;15228:2;15223:3;15219:12;15212:28;15268:2;15263:3;15259:12;15252:19;;15032:245;;;;15286:383;;15446:67;15510:2;15505:3;15446:67;;;15439:74;;15546:34;15542:1;15537:3;15533:11;15526:55;15615:16;15610:2;15605:3;15601:12;15594:38;15660:2;15655:3;15651:12;15644:19;;15432:237;;;;15677:113;15760:24;15778:5;15760:24;;;15755:3;15748:37;15742:48;;;15797:274;;15947:99;16042:3;16033:6;16025;15947:99;;;15940:106;;16063:3;16056:10;;15928:143;;;;;;16078:262;;16222:93;16311:3;16302:6;16222:93;;;16215:100;;16332:3;16325:10;;16203:137;;;;;16347:286;;16503:105;16604:3;16595:6;16587;16503:105;;;16496:112;;16625:3;16618:10;;16484:149;;;;;;16640:372;;16839:148;16983:3;16839:148;;;16832:155;;17004:3;16997:10;;16820:192;;;;17019:213;;17137:2;17126:9;17122:18;17114:26;;17151:71;17219:1;17208:9;17204:17;17195:6;17151:71;;;17108:124;;;;;17239:229;;17365:2;17354:9;17350:18;17342:26;;17379:79;17455:1;17444:9;17440:17;17431:6;17379:79;;;17336:132;;;;;17475:245;;17609:2;17598:9;17594:18;17586:26;;17623:87;17707:1;17696:9;17692:17;17683:6;17623:87;;;17580:140;;;;;17727:381;;17905:2;17894:9;17890:18;17882:26;;17955:9;17949:4;17945:20;17941:1;17930:9;17926:17;17919:47;17980:118;18093:4;18084:6;17980:118;;;17972:126;;17876:232;;;;;18115:201;;18227:2;18216:9;18212:18;18204:26;;18241:65;18303:1;18292:9;18288:17;18279:6;18241:65;;;18198:118;;;;;18323:213;;18441:2;18430:9;18426:18;18418:26;;18455:71;18523:1;18512:9;18508:17;18499:6;18455:71;;;18412:124;;;;;18543:324;;18689:2;18678:9;18674:18;18666:26;;18703:71;18771:1;18760:9;18756:17;18747:6;18703:71;;;18785:72;18853:2;18842:9;18838:18;18829:6;18785:72;;;18660:207;;;;;;18874:209;;18990:2;18979:9;18975:18;18967:26;;19004:69;19070:1;19059:9;19055:17;19046:6;19004:69;;;18961:122;;;;;19090:317;;19236:2;19225:9;19221:18;19213:26;;19286:9;19280:4;19276:20;19272:1;19261:9;19257:17;19250:47;19311:86;19392:4;19383:6;19375;19311:86;;;19303:94;;19207:200;;;;;;19414:297;;19550:2;19539:9;19535:18;19527:26;;19600:9;19594:4;19590:20;19586:1;19575:9;19571:17;19564:47;19625:76;19696:4;19687:6;19625:76;;;19617:84;;19521:190;;;;;19718:253;;19856:2;19845:9;19841:18;19833:26;;19870:91;19958:1;19947:9;19943:17;19934:6;19870:91;;;19827:144;;;;;19978:321;;20126:2;20115:9;20111:18;20103:26;;20176:9;20170:4;20166:20;20162:1;20151:9;20147:17;20140:47;20201:88;20284:4;20275:6;20267;20201:88;;;20193:96;;20097:202;;;;;;20306:301;;20444:2;20433:9;20429:18;20421:26;;20494:9;20488:4;20484:20;20480:1;20469:9;20465:17;20458:47;20519:78;20592:4;20583:6;20519:78;;;20511:86;;20415:192;;;;;20614:407;;20805:2;20794:9;20790:18;20782:26;;20855:9;20849:4;20845:20;20841:1;20830:9;20826:17;20819:47;20880:131;21006:4;20880:131;;;20872:139;;20776:245;;;;21028:408;;21192:2;21181:9;21177:18;21169:26;;21206:71;21274:1;21263:9;21259:17;21250:6;21206:71;;;21325:9;21319:4;21315:20;21310:2;21299:9;21295:18;21288:48;21350:76;21421:4;21412:6;21350:76;;;21342:84;;21163:273;;;;;;21443:256;;21505:2;21499:9;21489:19;;21543:4;21535:6;21531:17;21642:6;21630:10;21627:22;21606:18;21594:10;21591:34;21588:62;21585:2;;;21663:1;21660;21653:12;21585:2;21683:10;21679:2;21672:22;21483:216;;;;;21706:321;;21849:18;21841:6;21838:30;21835:2;;;21881:1;21878;21871:12;21835:2;21948:4;21944:9;21937:4;21929:6;21925:17;21921:33;21913:41;;22012:4;22006;22002:15;21994:23;;21772:255;;;;22034:156;;22125:3;22117:11;;22163:4;22158:3;22154:14;22146:22;;22111:79;;;;22197:142;;22311:5;22305:12;22295:22;;22276:63;;;;22346:117;;22435:5;22429:12;22419:22;;22400:63;;;;22470:121;;22563:5;22557:12;22547:22;;22528:63;;;;22598:122;;22692:5;22686:12;22676:22;;22657:63;;;;22727:113;;22830:4;22825:3;22821:14;22813:22;;22807:33;;;;22848:183;;22983:6;22978:3;22971:19;23020:4;23015:3;23011:14;22996:29;;22964:67;;;;;23040:152;;23144:6;23139:3;23132:19;23181:4;23176:3;23172:14;23157:29;;23125:67;;;;;23201:162;;23315:6;23310:3;23303:19;23352:4;23347:3;23343:14;23328:29;;23296:67;;;;;23372:144;;23507:3;23492:18;;23485:31;;;;;23525:163;;23640:6;23635:3;23628:19;23677:4;23672:3;23668:14;23653:29;;23621:67;;;;;23697:145;;23833:3;23818:18;;23811:31;;;;;23850:91;;23912:24;23930:5;23912:24;;;23901:35;;23895:46;;;;23948:99;;24018:24;24036:5;24018:24;;;24007:35;;24001:46;;;;24054:85;;24127:5;24120:13;24113:21;24102:32;;24096:43;;;;24146:72;;24208:5;24197:16;;24191:27;;;;24225:144;;24297:66;24290:5;24286:78;24275:89;;24269:100;;;;24376:111;;24458:24;24476:5;24458:24;;;24447:35;;24441:46;;;;24494:121;;24567:42;24560:5;24556:54;24545:65;;24539:76;;;;24622:72;;24684:5;24673:16;;24667:27;;;;24701:129;;24788:37;24819:5;24788:37;;;24775:50;;24769:61;;;;24837:161;;24936:57;24987:5;24936:57;;;24923:70;;24917:81;;;;25005:128;;25104:24;25122:5;25104:24;;;25091:37;;25085:48;;;;25140:121;;25219:37;25250:5;25219:37;;;25206:50;;25200:61;;;;25268:108;;25347:24;25365:5;25347:24;;;25334:37;;25328:48;;;;25384:145;25465:6;25460:3;25455;25442:30;25521:1;25512:6;25507:3;25503:16;25496:27;25435:94;;;;25538:268;25603:1;25610:101;25624:6;25621:1;25618:13;25610:101;;;25700:1;25695:3;25691:11;25685:18;25681:1;25676:3;25672:11;25665:39;25646:2;25643:1;25639:10;25634:15;;25610:101;;;25726:6;25723:1;25720:13;25717:2;;;25791:1;25782:6;25777:3;25773:16;25766:27;25717:2;25587:219;;;;;25814:97;;25902:2;25898:7;25893:2;25886:5;25882:14;25878:28;25868:38;;25862:49;;;;25919:117;25988:24;26006:5;25988:24;;;25981:5;25978:35;25968:2;;26027:1;26024;26017:12;25968:2;25962:74;;26043:111;26109:21;26124:5;26109:21;;;26102:5;26099:32;26089:2;;26145:1;26142;26135:12;26089:2;26083:71;;26161:117;26230:24;26248:5;26230:24;;;26223:5;26220:35;26210:2;;26269:1;26266;26259:12;26210:2;26204:74;;26285:115;26353:23;26370:5;26353:23;;;26346:5;26343:34;26333:2;;26391:1;26388;26381:12;26333:2;26327:73;;26407:157;26496:44;26534:5;26496:44;;;26489:5;26486:55;26476:2;;26555:1;26552;26545:12;26476:2;26470:94;;26571:117;26640:24;26658:5;26640:24;;;26633:5;26630:35;26620:2;;26679:1;26676;26669:12;26620:2;26614:74;",
  "source": "pragma solidity ^0.5.0;\npragma experimental ABIEncoderV2;\n\nimport \"@rsksmart/rns-registry/contracts/AbstractRNS.sol\";\nimport \"@openzeppelin/upgrades/contracts/Initializable.sol\";\nimport \"./RSKAddrResolver.sol\";\nimport \"@ensdomains/resolver/contracts/profiles/ContentHashResolver.sol\";\nimport \"@ensdomains/resolver/contracts/profiles/ABIResolver.sol\";\nimport \"@ensdomains/resolver/contracts/profiles/PubkeyResolver.sol\";\nimport \"@ensdomains/resolver/contracts/profiles/TextResolver.sol\";\nimport \"@ensdomains/resolver/contracts/profiles/InterfaceResolver.sol\";\n\n/**\n * @title ResolverV1\n * @dev A public resolver implementation. This implementation can\n * be as an openzeppelin/upgrades v2.8 proxy contract implementation.\n * Source: https://github.com/ensdomains/resolvers/blob/9c3ed5377501d77738089c81c2a0b141878048f9/contracts/PublicResolver.sol\n */\ncontract ResolverV1 is Initializable, RSKAddrResolver, ContentHashResolver, ABIResolver, PubkeyResolver, TextResolver, InterfaceResolver {\n    AbstractRNS public rns;\n\n    /**\n     * A mapping of authorisations. An address that is authorised for a name\n     * may make any changes to the name that the owner could, but may not update\n     * the set of authorisations.\n     * (node, owner, caller) => isAuthorised\n     */\n    mapping(bytes32=>mapping(address=>mapping(address=>bool))) public authorisations;\n\n    event AuthorisationChanged(bytes32 indexed node, address indexed owner, address indexed target, bool isAuthorised);\n\n    /**\n     * @notice Initializes the contract.\n     * @dev Replace the usage of a constructor.\n     * @param _rns the RNS Registry address.\n     */\n    function initialize(AbstractRNS _rns) initializer external {\n        rns = _rns;\n    }\n\n    /**\n     * @dev Sets or clears an authorisation.\n     * Authorisations are specific to the caller. Any account can set an authorisation\n     * for any name, but the authorisation that is checked will be that of the\n     * current owner of a name. Thus, transferring a name effectively clears any\n     * existing authorisations, and new authorisations can be set in advance of\n     * an ownership transfer if desired.\n     *\n     * @param node The name to change the authorisation on.\n     * @param target The address that is to be authorised or deauthorised.\n     * @param isAuthorised True if the address should be authorised, or false if it should be deauthorised.\n     */\n    function setAuthorisation(bytes32 node, address target, bool isAuthorised) external {\n        authorisations[node][msg.sender][target] = isAuthorised;\n        emit AuthorisationChanged(node, msg.sender, target, isAuthorised);\n    }\n\n    function isAuthorised(bytes32 node) internal view returns(bool) {\n        address owner = rns.owner(node);\n        return owner == msg.sender || authorisations[node][owner][msg.sender];\n    }\n\n    function multicall(bytes[] calldata data) external returns(bytes[] memory results) {\n        results = new bytes[](data.length);\n        for(uint i = 0; i < data.length; i++) {\n            (bool success, bytes memory result) = address(this).delegatecall(data[i]);\n            require(success);\n            results[i] = result;\n        }\n        return results;\n    }\n}\n",
  "sourcePath": "/Users/sergiojara/Developer/iov/rns-resolver/contracts/ResolverV1.sol",
  "ast": {
    "absolutePath": "/Users/sergiojara/Developer/iov/rns-resolver/contracts/ResolverV1.sol",
    "exportedSymbols": {
      "ResolverV1": [
        342
      ]
    },
    "id": 343,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 171,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "id": 172,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:2"
      },
      {
        "absolutePath": "@rsksmart/rns-registry/contracts/AbstractRNS.sol",
        "file": "@rsksmart/rns-registry/contracts/AbstractRNS.sol",
        "id": 173,
        "nodeType": "ImportDirective",
        "scope": 343,
        "sourceUnit": 3448,
        "src": "59:58:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "id": 174,
        "nodeType": "ImportDirective",
        "scope": 343,
        "sourceUnit": 2282,
        "src": "118:60:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sergiojara/Developer/iov/rns-resolver/contracts/RSKAddrResolver.sol",
        "file": "./RSKAddrResolver.sol",
        "id": 175,
        "nodeType": "ImportDirective",
        "scope": 343,
        "sourceUnit": 170,
        "src": "179:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@ensdomains/resolver/contracts/profiles/ContentHashResolver.sol",
        "file": "@ensdomains/resolver/contracts/profiles/ContentHashResolver.sol",
        "id": 176,
        "nodeType": "ImportDirective",
        "scope": 343,
        "sourceUnit": 1842,
        "src": "211:73:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@ensdomains/resolver/contracts/profiles/ABIResolver.sol",
        "file": "@ensdomains/resolver/contracts/profiles/ABIResolver.sol",
        "id": 177,
        "nodeType": "ImportDirective",
        "scope": 343,
        "sourceUnit": 1613,
        "src": "285:65:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@ensdomains/resolver/contracts/profiles/PubkeyResolver.sol",
        "file": "@ensdomains/resolver/contracts/profiles/PubkeyResolver.sol",
        "id": 178,
        "nodeType": "ImportDirective",
        "scope": 343,
        "sourceUnit": 2120,
        "src": "351:68:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@ensdomains/resolver/contracts/profiles/TextResolver.sol",
        "file": "@ensdomains/resolver/contracts/profiles/TextResolver.sol",
        "id": 179,
        "nodeType": "ImportDirective",
        "scope": 343,
        "sourceUnit": 2203,
        "src": "420:66:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@ensdomains/resolver/contracts/profiles/InterfaceResolver.sol",
        "file": "@ensdomains/resolver/contracts/profiles/InterfaceResolver.sol",
        "id": 180,
        "nodeType": "ImportDirective",
        "scope": 343,
        "sourceUnit": 2029,
        "src": "487:71:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 181,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2281,
              "src": "874:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$2281",
                "typeString": "contract Initializable"
              }
            },
            "id": 182,
            "nodeType": "InheritanceSpecifier",
            "src": "874:13:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 183,
              "name": "RSKAddrResolver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 169,
              "src": "889:15:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RSKAddrResolver_$169",
                "typeString": "contract RSKAddrResolver"
              }
            },
            "id": 184,
            "nodeType": "InheritanceSpecifier",
            "src": "889:15:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 185,
              "name": "ContentHashResolver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1841,
              "src": "906:19:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ContentHashResolver_$1841",
                "typeString": "contract ContentHashResolver"
              }
            },
            "id": 186,
            "nodeType": "InheritanceSpecifier",
            "src": "906:19:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 187,
              "name": "ABIResolver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1612,
              "src": "927:11:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ABIResolver_$1612",
                "typeString": "contract ABIResolver"
              }
            },
            "id": 188,
            "nodeType": "InheritanceSpecifier",
            "src": "927:11:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 189,
              "name": "PubkeyResolver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2119,
              "src": "940:14:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PubkeyResolver_$2119",
                "typeString": "contract PubkeyResolver"
              }
            },
            "id": 190,
            "nodeType": "InheritanceSpecifier",
            "src": "940:14:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 191,
              "name": "TextResolver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2202,
              "src": "956:12:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TextResolver_$2202",
                "typeString": "contract TextResolver"
              }
            },
            "id": 192,
            "nodeType": "InheritanceSpecifier",
            "src": "956:12:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 193,
              "name": "InterfaceResolver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2028,
              "src": "970:17:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_InterfaceResolver_$2028",
                "typeString": "contract InterfaceResolver"
              }
            },
            "id": 194,
            "nodeType": "InheritanceSpecifier",
            "src": "970:17:2"
          }
        ],
        "contractDependencies": [
          169,
          1476,
          1612,
          1771,
          1841,
          2028,
          2119,
          2202,
          2281
        ],
        "contractKind": "contract",
        "documentation": "@title ResolverV1\n@dev A public resolver implementation. This implementation can\nbe as an openzeppelin/upgrades v2.8 proxy contract implementation.\nSource: https://github.com/ensdomains/resolvers/blob/9c3ed5377501d77738089c81c2a0b141878048f9/contracts/PublicResolver.sol",
        "fullyImplemented": true,
        "id": 342,
        "linearizedBaseContracts": [
          342,
          2028,
          2202,
          2119,
          1612,
          1841,
          169,
          1771,
          1476,
          2281
        ],
        "name": "ResolverV1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 196,
            "name": "rns",
            "nodeType": "VariableDeclaration",
            "scope": 342,
            "src": "994:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AbstractRNS_$3447",
              "typeString": "contract AbstractRNS"
            },
            "typeName": {
              "contractScope": null,
              "id": 195,
              "name": "AbstractRNS",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3447,
              "src": "994:11:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AbstractRNS_$3447",
                "typeString": "contract AbstractRNS"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 204,
            "name": "authorisations",
            "nodeType": "VariableDeclaration",
            "scope": 342,
            "src": "1276:80:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$_$",
              "typeString": "mapping(bytes32 => mapping(address => mapping(address => bool)))"
            },
            "typeName": {
              "id": 203,
              "keyType": {
                "id": 197,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1284:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1276:58:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$_$",
                "typeString": "mapping(bytes32 => mapping(address => mapping(address => bool)))"
              },
              "valueType": {
                "id": 202,
                "keyType": {
                  "id": 198,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1301:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1293:40:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                  "typeString": "mapping(address => mapping(address => bool))"
                },
                "valueType": {
                  "id": 201,
                  "keyType": {
                    "id": 199,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1318:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1310:22:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "valueType": {
                    "id": 200,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1327:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 214,
            "name": "AuthorisationChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 206,
                  "indexed": true,
                  "name": "node",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "1390:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1390:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 208,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "1412:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1412:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 210,
                  "indexed": true,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "1435:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 209,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1435:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 212,
                  "indexed": false,
                  "name": "isAuthorised",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "1459:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 211,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1459:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1389:88:2"
            },
            "src": "1363:115:2"
          },
          {
            "body": {
              "id": 225,
              "nodeType": "Block",
              "src": "1693:27:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 221,
                      "name": "rns",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 196,
                      "src": "1703:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AbstractRNS_$3447",
                        "typeString": "contract AbstractRNS"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 222,
                      "name": "_rns",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 216,
                      "src": "1709:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AbstractRNS_$3447",
                        "typeString": "contract AbstractRNS"
                      }
                    },
                    "src": "1703:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AbstractRNS_$3447",
                      "typeString": "contract AbstractRNS"
                    }
                  },
                  "id": 224,
                  "nodeType": "ExpressionStatement",
                  "src": "1703:10:2"
                }
              ]
            },
            "documentation": "@notice Initializes the contract.\n@dev Replace the usage of a constructor.\n@param _rns the RNS Registry address.",
            "id": 226,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 219,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 218,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2256,
                  "src": "1672:11:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1672:11:2"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 216,
                  "name": "_rns",
                  "nodeType": "VariableDeclaration",
                  "scope": 226,
                  "src": "1654:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AbstractRNS_$3447",
                    "typeString": "contract AbstractRNS"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 215,
                    "name": "AbstractRNS",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3447,
                    "src": "1654:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AbstractRNS_$3447",
                      "typeString": "contract AbstractRNS"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1653:18:2"
            },
            "returnParameters": {
              "id": 220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1693:0:2"
            },
            "scope": 342,
            "src": "1634:86:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 254,
              "nodeType": "Block",
              "src": "2489:147:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 235,
                            "name": "authorisations",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 204,
                            "src": "2499:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$_$",
                              "typeString": "mapping(bytes32 => mapping(address => mapping(address => bool)))"
                            }
                          },
                          "id": 240,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 236,
                            "name": "node",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 228,
                            "src": "2514:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2499:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 241,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 237,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3689,
                            "src": "2520:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2520:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2499:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 242,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 239,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 230,
                        "src": "2532:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2499:40:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 243,
                      "name": "isAuthorised",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 232,
                      "src": "2542:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2499:55:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 245,
                  "nodeType": "ExpressionStatement",
                  "src": "2499:55:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 247,
                        "name": "node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 228,
                        "src": "2590:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 248,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3689,
                          "src": "2596:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2596:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 250,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 230,
                        "src": "2608:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 251,
                        "name": "isAuthorised",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 232,
                        "src": "2616:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 246,
                      "name": "AuthorisationChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 214,
                      "src": "2569:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (bytes32,address,address,bool)"
                      }
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2569:60:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 253,
                  "nodeType": "EmitStatement",
                  "src": "2564:65:2"
                }
              ]
            },
            "documentation": "@dev Sets or clears an authorisation.\nAuthorisations are specific to the caller. Any account can set an authorisation\nfor any name, but the authorisation that is checked will be that of the\ncurrent owner of a name. Thus, transferring a name effectively clears any\nexisting authorisations, and new authorisations can be set in advance of\nan ownership transfer if desired.\n     * @param node The name to change the authorisation on.\n@param target The address that is to be authorised or deauthorised.\n@param isAuthorised True if the address should be authorised, or false if it should be deauthorised.",
            "id": 255,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAuthorisation",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 228,
                  "name": "node",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "2431:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 227,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2431:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 230,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "2445:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 229,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2445:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 232,
                  "name": "isAuthorised",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "2461:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 231,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2461:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2430:49:2"
            },
            "returnParameters": {
              "id": 234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2489:0:2"
            },
            "scope": 342,
            "src": "2405:231:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 283,
              "nodeType": "Block",
              "src": "2706:127:2",
              "statements": [
                {
                  "assignments": [
                    263
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 263,
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "scope": 283,
                      "src": "2716:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 262,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2716:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 268,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 266,
                        "name": "node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 257,
                        "src": "2742:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 264,
                        "name": "rns",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 196,
                        "src": "2732:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractRNS_$3447",
                          "typeString": "contract AbstractRNS"
                        }
                      },
                      "id": 265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3376,
                      "src": "2732:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32) view external returns (address)"
                      }
                    },
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2732:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2716:31:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 269,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 263,
                        "src": "2764:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 270,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3689,
                          "src": "2773:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2773:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "src": "2764:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 273,
                            "name": "authorisations",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 204,
                            "src": "2787:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$_$",
                              "typeString": "mapping(bytes32 => mapping(address => mapping(address => bool)))"
                            }
                          },
                          "id": 275,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 274,
                            "name": "node",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 257,
                            "src": "2802:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2787:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 277,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 276,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 263,
                          "src": "2808:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2787:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 280,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 278,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3689,
                          "src": "2815:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2815:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2787:39:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2764:62:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 261,
                  "id": 282,
                  "nodeType": "Return",
                  "src": "2757:69:2"
                }
              ]
            },
            "documentation": null,
            "id": 284,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAuthorised",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 257,
                  "name": "node",
                  "nodeType": "VariableDeclaration",
                  "scope": 284,
                  "src": "2664:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 256,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2664:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2663:14:2"
            },
            "returnParameters": {
              "id": 261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 260,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 284,
                  "src": "2700:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 259,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2700:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2699:6:2"
            },
            "scope": 342,
            "src": "2642:191:2",
            "stateMutability": "view",
            "superFunction": 1431,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 340,
              "nodeType": "Block",
              "src": "2922:283:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 293,
                      "name": "results",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 291,
                      "src": "2932:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                        "typeString": "bytes memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 297,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 287,
                            "src": "2954:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes_calldata_$dyn_calldata_ptr",
                              "typeString": "bytes calldata[] calldata"
                            }
                          },
                          "id": 298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2954:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2942:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_$dyn_memory_$",
                          "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 294,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "2946:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "id": 295,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "2946:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                            "typeString": "bytes[]"
                          }
                        }
                      },
                      "id": 299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2942:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory",
                        "typeString": "bytes memory[] memory"
                      }
                    },
                    "src": "2932:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "id": 301,
                  "nodeType": "ExpressionStatement",
                  "src": "2932:34:2"
                },
                {
                  "body": {
                    "id": 336,
                    "nodeType": "Block",
                    "src": "3014:161:2",
                    "statements": [
                      {
                        "assignments": [
                          314,
                          316
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 314,
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "scope": 336,
                            "src": "3029:12:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 313,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3029:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 316,
                            "name": "result",
                            "nodeType": "VariableDeclaration",
                            "scope": 336,
                            "src": "3043:19:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 315,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3043:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 325,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 321,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 287,
                                "src": "3093:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes_calldata_$dyn_calldata_ptr",
                                  "typeString": "bytes calldata[] calldata"
                                }
                              },
                              "id": 323,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 322,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 303,
                                "src": "3098:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3093:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 318,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3725,
                                  "src": "3074:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ResolverV1_$342",
                                    "typeString": "contract ResolverV1"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ResolverV1_$342",
                                    "typeString": "contract ResolverV1"
                                  }
                                ],
                                "id": 317,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3066:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 319,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3066:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 320,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "delegatecall",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3066:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) returns (bool,bytes memory)"
                            }
                          },
                          "id": 324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3066:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3028:73:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 327,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 314,
                              "src": "3123:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 326,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3692,
                              3693
                            ],
                            "referencedDeclaration": 3692,
                            "src": "3115:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3115:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 329,
                        "nodeType": "ExpressionStatement",
                        "src": "3115:16:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 330,
                              "name": "results",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 291,
                              "src": "3145:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                                "typeString": "bytes memory[] memory"
                              }
                            },
                            "id": 332,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 331,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 303,
                              "src": "3153:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3145:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory",
                              "typeString": "bytes memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 333,
                            "name": "result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 316,
                            "src": "3158:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "src": "3145:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 335,
                        "nodeType": "ExpressionStatement",
                        "src": "3145:19:2"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 306,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 303,
                      "src": "2992:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 307,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 287,
                        "src": "2996:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_$dyn_calldata_ptr",
                          "typeString": "bytes calldata[] calldata"
                        }
                      },
                      "id": 308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2996:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2992:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 337,
                  "initializationExpression": {
                    "assignments": [
                      303
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 303,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 337,
                        "src": "2980:6:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 302,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2980:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 305,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2989:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2980:10:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3009:3:2",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 310,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 303,
                        "src": "3009:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 312,
                    "nodeType": "ExpressionStatement",
                    "src": "3009:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "2976:199:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 338,
                    "name": "results",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 291,
                    "src": "3191:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "functionReturnParameters": 292,
                  "id": 339,
                  "nodeType": "Return",
                  "src": "3184:14:2"
                }
              ]
            },
            "documentation": null,
            "id": 341,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "multicall",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 287,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 341,
                  "src": "2858:21:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_$dyn_calldata_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 285,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "2858:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 286,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2858:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2857:23:2"
            },
            "returnParameters": {
              "id": 292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 291,
                  "name": "results",
                  "nodeType": "VariableDeclaration",
                  "scope": 341,
                  "src": "2898:22:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 289,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "2898:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 290,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2898:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2897:24:2"
            },
            "scope": 342,
            "src": "2839:366:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 343,
        "src": "851:2356:2"
      }
    ],
    "src": "0:3208:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/sergiojara/Developer/iov/rns-resolver/contracts/ResolverV1.sol",
    "exportedSymbols": {
      "ResolverV1": [
        342
      ]
    },
    "id": 343,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 171,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "id": 172,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:2"
      },
      {
        "absolutePath": "@rsksmart/rns-registry/contracts/AbstractRNS.sol",
        "file": "@rsksmart/rns-registry/contracts/AbstractRNS.sol",
        "id": 173,
        "nodeType": "ImportDirective",
        "scope": 343,
        "sourceUnit": 3448,
        "src": "59:58:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "id": 174,
        "nodeType": "ImportDirective",
        "scope": 343,
        "sourceUnit": 2282,
        "src": "118:60:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sergiojara/Developer/iov/rns-resolver/contracts/RSKAddrResolver.sol",
        "file": "./RSKAddrResolver.sol",
        "id": 175,
        "nodeType": "ImportDirective",
        "scope": 343,
        "sourceUnit": 170,
        "src": "179:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@ensdomains/resolver/contracts/profiles/ContentHashResolver.sol",
        "file": "@ensdomains/resolver/contracts/profiles/ContentHashResolver.sol",
        "id": 176,
        "nodeType": "ImportDirective",
        "scope": 343,
        "sourceUnit": 1842,
        "src": "211:73:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@ensdomains/resolver/contracts/profiles/ABIResolver.sol",
        "file": "@ensdomains/resolver/contracts/profiles/ABIResolver.sol",
        "id": 177,
        "nodeType": "ImportDirective",
        "scope": 343,
        "sourceUnit": 1613,
        "src": "285:65:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@ensdomains/resolver/contracts/profiles/PubkeyResolver.sol",
        "file": "@ensdomains/resolver/contracts/profiles/PubkeyResolver.sol",
        "id": 178,
        "nodeType": "ImportDirective",
        "scope": 343,
        "sourceUnit": 2120,
        "src": "351:68:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@ensdomains/resolver/contracts/profiles/TextResolver.sol",
        "file": "@ensdomains/resolver/contracts/profiles/TextResolver.sol",
        "id": 179,
        "nodeType": "ImportDirective",
        "scope": 343,
        "sourceUnit": 2203,
        "src": "420:66:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@ensdomains/resolver/contracts/profiles/InterfaceResolver.sol",
        "file": "@ensdomains/resolver/contracts/profiles/InterfaceResolver.sol",
        "id": 180,
        "nodeType": "ImportDirective",
        "scope": 343,
        "sourceUnit": 2029,
        "src": "487:71:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 181,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2281,
              "src": "874:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$2281",
                "typeString": "contract Initializable"
              }
            },
            "id": 182,
            "nodeType": "InheritanceSpecifier",
            "src": "874:13:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 183,
              "name": "RSKAddrResolver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 169,
              "src": "889:15:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RSKAddrResolver_$169",
                "typeString": "contract RSKAddrResolver"
              }
            },
            "id": 184,
            "nodeType": "InheritanceSpecifier",
            "src": "889:15:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 185,
              "name": "ContentHashResolver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1841,
              "src": "906:19:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ContentHashResolver_$1841",
                "typeString": "contract ContentHashResolver"
              }
            },
            "id": 186,
            "nodeType": "InheritanceSpecifier",
            "src": "906:19:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 187,
              "name": "ABIResolver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1612,
              "src": "927:11:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ABIResolver_$1612",
                "typeString": "contract ABIResolver"
              }
            },
            "id": 188,
            "nodeType": "InheritanceSpecifier",
            "src": "927:11:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 189,
              "name": "PubkeyResolver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2119,
              "src": "940:14:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PubkeyResolver_$2119",
                "typeString": "contract PubkeyResolver"
              }
            },
            "id": 190,
            "nodeType": "InheritanceSpecifier",
            "src": "940:14:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 191,
              "name": "TextResolver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2202,
              "src": "956:12:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TextResolver_$2202",
                "typeString": "contract TextResolver"
              }
            },
            "id": 192,
            "nodeType": "InheritanceSpecifier",
            "src": "956:12:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 193,
              "name": "InterfaceResolver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2028,
              "src": "970:17:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_InterfaceResolver_$2028",
                "typeString": "contract InterfaceResolver"
              }
            },
            "id": 194,
            "nodeType": "InheritanceSpecifier",
            "src": "970:17:2"
          }
        ],
        "contractDependencies": [
          169,
          1476,
          1612,
          1771,
          1841,
          2028,
          2119,
          2202,
          2281
        ],
        "contractKind": "contract",
        "documentation": "@title ResolverV1\n@dev A public resolver implementation. This implementation can\nbe as an openzeppelin/upgrades v2.8 proxy contract implementation.\nSource: https://github.com/ensdomains/resolvers/blob/9c3ed5377501d77738089c81c2a0b141878048f9/contracts/PublicResolver.sol",
        "fullyImplemented": true,
        "id": 342,
        "linearizedBaseContracts": [
          342,
          2028,
          2202,
          2119,
          1612,
          1841,
          169,
          1771,
          1476,
          2281
        ],
        "name": "ResolverV1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 196,
            "name": "rns",
            "nodeType": "VariableDeclaration",
            "scope": 342,
            "src": "994:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AbstractRNS_$3447",
              "typeString": "contract AbstractRNS"
            },
            "typeName": {
              "contractScope": null,
              "id": 195,
              "name": "AbstractRNS",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3447,
              "src": "994:11:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AbstractRNS_$3447",
                "typeString": "contract AbstractRNS"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 204,
            "name": "authorisations",
            "nodeType": "VariableDeclaration",
            "scope": 342,
            "src": "1276:80:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$_$",
              "typeString": "mapping(bytes32 => mapping(address => mapping(address => bool)))"
            },
            "typeName": {
              "id": 203,
              "keyType": {
                "id": 197,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1284:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1276:58:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$_$",
                "typeString": "mapping(bytes32 => mapping(address => mapping(address => bool)))"
              },
              "valueType": {
                "id": 202,
                "keyType": {
                  "id": 198,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1301:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1293:40:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                  "typeString": "mapping(address => mapping(address => bool))"
                },
                "valueType": {
                  "id": 201,
                  "keyType": {
                    "id": 199,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1318:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1310:22:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "valueType": {
                    "id": 200,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1327:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 214,
            "name": "AuthorisationChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 206,
                  "indexed": true,
                  "name": "node",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "1390:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1390:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 208,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "1412:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1412:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 210,
                  "indexed": true,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "1435:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 209,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1435:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 212,
                  "indexed": false,
                  "name": "isAuthorised",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "1459:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 211,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1459:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1389:88:2"
            },
            "src": "1363:115:2"
          },
          {
            "body": {
              "id": 225,
              "nodeType": "Block",
              "src": "1693:27:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 221,
                      "name": "rns",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 196,
                      "src": "1703:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AbstractRNS_$3447",
                        "typeString": "contract AbstractRNS"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 222,
                      "name": "_rns",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 216,
                      "src": "1709:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AbstractRNS_$3447",
                        "typeString": "contract AbstractRNS"
                      }
                    },
                    "src": "1703:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AbstractRNS_$3447",
                      "typeString": "contract AbstractRNS"
                    }
                  },
                  "id": 224,
                  "nodeType": "ExpressionStatement",
                  "src": "1703:10:2"
                }
              ]
            },
            "documentation": "@notice Initializes the contract.\n@dev Replace the usage of a constructor.\n@param _rns the RNS Registry address.",
            "id": 226,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 219,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 218,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2256,
                  "src": "1672:11:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1672:11:2"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 216,
                  "name": "_rns",
                  "nodeType": "VariableDeclaration",
                  "scope": 226,
                  "src": "1654:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AbstractRNS_$3447",
                    "typeString": "contract AbstractRNS"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 215,
                    "name": "AbstractRNS",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3447,
                    "src": "1654:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AbstractRNS_$3447",
                      "typeString": "contract AbstractRNS"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1653:18:2"
            },
            "returnParameters": {
              "id": 220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1693:0:2"
            },
            "scope": 342,
            "src": "1634:86:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 254,
              "nodeType": "Block",
              "src": "2489:147:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 235,
                            "name": "authorisations",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 204,
                            "src": "2499:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$_$",
                              "typeString": "mapping(bytes32 => mapping(address => mapping(address => bool)))"
                            }
                          },
                          "id": 240,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 236,
                            "name": "node",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 228,
                            "src": "2514:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2499:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 241,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 237,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3689,
                            "src": "2520:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2520:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2499:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 242,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 239,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 230,
                        "src": "2532:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2499:40:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 243,
                      "name": "isAuthorised",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 232,
                      "src": "2542:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2499:55:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 245,
                  "nodeType": "ExpressionStatement",
                  "src": "2499:55:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 247,
                        "name": "node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 228,
                        "src": "2590:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 248,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3689,
                          "src": "2596:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2596:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 250,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 230,
                        "src": "2608:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 251,
                        "name": "isAuthorised",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 232,
                        "src": "2616:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 246,
                      "name": "AuthorisationChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 214,
                      "src": "2569:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (bytes32,address,address,bool)"
                      }
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2569:60:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 253,
                  "nodeType": "EmitStatement",
                  "src": "2564:65:2"
                }
              ]
            },
            "documentation": "@dev Sets or clears an authorisation.\nAuthorisations are specific to the caller. Any account can set an authorisation\nfor any name, but the authorisation that is checked will be that of the\ncurrent owner of a name. Thus, transferring a name effectively clears any\nexisting authorisations, and new authorisations can be set in advance of\nan ownership transfer if desired.\n     * @param node The name to change the authorisation on.\n@param target The address that is to be authorised or deauthorised.\n@param isAuthorised True if the address should be authorised, or false if it should be deauthorised.",
            "id": 255,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAuthorisation",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 228,
                  "name": "node",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "2431:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 227,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2431:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 230,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "2445:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 229,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2445:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 232,
                  "name": "isAuthorised",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "2461:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 231,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2461:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2430:49:2"
            },
            "returnParameters": {
              "id": 234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2489:0:2"
            },
            "scope": 342,
            "src": "2405:231:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 283,
              "nodeType": "Block",
              "src": "2706:127:2",
              "statements": [
                {
                  "assignments": [
                    263
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 263,
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "scope": 283,
                      "src": "2716:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 262,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2716:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 268,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 266,
                        "name": "node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 257,
                        "src": "2742:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 264,
                        "name": "rns",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 196,
                        "src": "2732:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractRNS_$3447",
                          "typeString": "contract AbstractRNS"
                        }
                      },
                      "id": 265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3376,
                      "src": "2732:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32) view external returns (address)"
                      }
                    },
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2732:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2716:31:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 269,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 263,
                        "src": "2764:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 270,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3689,
                          "src": "2773:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2773:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "src": "2764:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 273,
                            "name": "authorisations",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 204,
                            "src": "2787:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$_$",
                              "typeString": "mapping(bytes32 => mapping(address => mapping(address => bool)))"
                            }
                          },
                          "id": 275,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 274,
                            "name": "node",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 257,
                            "src": "2802:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2787:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 277,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 276,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 263,
                          "src": "2808:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2787:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 280,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 278,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3689,
                          "src": "2815:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2815:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2787:39:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2764:62:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 261,
                  "id": 282,
                  "nodeType": "Return",
                  "src": "2757:69:2"
                }
              ]
            },
            "documentation": null,
            "id": 284,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAuthorised",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 257,
                  "name": "node",
                  "nodeType": "VariableDeclaration",
                  "scope": 284,
                  "src": "2664:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 256,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2664:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2663:14:2"
            },
            "returnParameters": {
              "id": 261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 260,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 284,
                  "src": "2700:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 259,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2700:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2699:6:2"
            },
            "scope": 342,
            "src": "2642:191:2",
            "stateMutability": "view",
            "superFunction": 1431,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 340,
              "nodeType": "Block",
              "src": "2922:283:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 293,
                      "name": "results",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 291,
                      "src": "2932:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                        "typeString": "bytes memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 297,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 287,
                            "src": "2954:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes_calldata_$dyn_calldata_ptr",
                              "typeString": "bytes calldata[] calldata"
                            }
                          },
                          "id": 298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2954:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2942:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_$dyn_memory_$",
                          "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 294,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "2946:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "id": 295,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "2946:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                            "typeString": "bytes[]"
                          }
                        }
                      },
                      "id": 299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2942:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory",
                        "typeString": "bytes memory[] memory"
                      }
                    },
                    "src": "2932:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "id": 301,
                  "nodeType": "ExpressionStatement",
                  "src": "2932:34:2"
                },
                {
                  "body": {
                    "id": 336,
                    "nodeType": "Block",
                    "src": "3014:161:2",
                    "statements": [
                      {
                        "assignments": [
                          314,
                          316
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 314,
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "scope": 336,
                            "src": "3029:12:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 313,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3029:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 316,
                            "name": "result",
                            "nodeType": "VariableDeclaration",
                            "scope": 336,
                            "src": "3043:19:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 315,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3043:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 325,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 321,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 287,
                                "src": "3093:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes_calldata_$dyn_calldata_ptr",
                                  "typeString": "bytes calldata[] calldata"
                                }
                              },
                              "id": 323,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 322,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 303,
                                "src": "3098:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3093:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 318,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3725,
                                  "src": "3074:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ResolverV1_$342",
                                    "typeString": "contract ResolverV1"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ResolverV1_$342",
                                    "typeString": "contract ResolverV1"
                                  }
                                ],
                                "id": 317,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3066:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 319,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3066:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 320,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "delegatecall",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3066:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) returns (bool,bytes memory)"
                            }
                          },
                          "id": 324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3066:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3028:73:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 327,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 314,
                              "src": "3123:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 326,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3692,
                              3693
                            ],
                            "referencedDeclaration": 3692,
                            "src": "3115:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3115:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 329,
                        "nodeType": "ExpressionStatement",
                        "src": "3115:16:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 330,
                              "name": "results",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 291,
                              "src": "3145:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                                "typeString": "bytes memory[] memory"
                              }
                            },
                            "id": 332,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 331,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 303,
                              "src": "3153:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3145:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory",
                              "typeString": "bytes memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 333,
                            "name": "result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 316,
                            "src": "3158:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "src": "3145:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 335,
                        "nodeType": "ExpressionStatement",
                        "src": "3145:19:2"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 306,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 303,
                      "src": "2992:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 307,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 287,
                        "src": "2996:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_$dyn_calldata_ptr",
                          "typeString": "bytes calldata[] calldata"
                        }
                      },
                      "id": 308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2996:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2992:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 337,
                  "initializationExpression": {
                    "assignments": [
                      303
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 303,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 337,
                        "src": "2980:6:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 302,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2980:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 305,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2989:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2980:10:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3009:3:2",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 310,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 303,
                        "src": "3009:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 312,
                    "nodeType": "ExpressionStatement",
                    "src": "3009:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "2976:199:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 338,
                    "name": "results",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 291,
                    "src": "3191:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "functionReturnParameters": 292,
                  "id": 339,
                  "nodeType": "Return",
                  "src": "3184:14:2"
                }
              ]
            },
            "documentation": null,
            "id": 341,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "multicall",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 287,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 341,
                  "src": "2858:21:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_$dyn_calldata_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 285,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "2858:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 286,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2858:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2857:23:2"
            },
            "returnParameters": {
              "id": 292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 291,
                  "name": "results",
                  "nodeType": "VariableDeclaration",
                  "scope": 341,
                  "src": "2898:22:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 289,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "2898:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 290,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2898:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2897:24:2"
            },
            "scope": 342,
            "src": "2839:366:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 343,
        "src": "851:2356:2"
      }
    ],
    "src": "0:3208:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.21",
  "updatedAt": "2022-11-15T23:52:13.376Z",
  "devdoc": {
    "details": "A public resolver implementation. This implementation can be as an openzeppelin/upgrades v2.8 proxy contract implementation. Source: https://github.com/ensdomains/resolvers/blob/9c3ed5377501d77738089c81c2a0b141878048f9/contracts/PublicResolver.sol",
    "methods": {
      "ABI(bytes32,uint256)": {
        "params": {
          "contentTypes": "A bitwise OR of the ABI formats accepted by the caller.",
          "node": "The ENS node to query"
        },
        "return": "contentType The content type of the return valuedata The ABI data"
      },
      "addr(bytes32)": {
        "params": {
          "node": "The RNS node to query."
        },
        "return": "The associated address."
      },
      "contenthash(bytes32)": {
        "params": {
          "node": "The ENS node to query."
        },
        "return": "The associated contenthash."
      },
      "initialize(address)": {
        "details": "Replace the usage of a constructor.",
        "params": {
          "_rns": "the RNS Registry address."
        }
      },
      "interfaceImplementer(bytes32,bytes4)": {
        "params": {
          "interfaceID": "The EIP 168 interface ID to check for.",
          "node": "The ENS node to query."
        },
        "return": "The address that implements this interface, or 0 if the interface is unsupported."
      },
      "pubkey(bytes32)": {
        "params": {
          "node": "The ENS node to query"
        },
        "return": "x, y the X and Y coordinates of the curve point for the public key."
      },
      "setABI(bytes32,uint256,bytes)": {
        "params": {
          "contentType": "The content type of the ABI",
          "data": "The ABI data.",
          "node": "The node to update."
        }
      },
      "setAddr(bytes32,address)": {
        "params": {
          "a": "The address to set.",
          "node": "The node to update."
        }
      },
      "setAddr(bytes32,uint256,bytes)": {
        "params": {
          "a": "The address to set.",
          "coinType": "slip0044 coin type.",
          "node": "The node to update."
        }
      },
      "setAuthorisation(bytes32,address,bool)": {
        "details": "Sets or clears an authorisation. Authorisations are specific to the caller. Any account can set an authorisation for any name, but the authorisation that is checked will be that of the current owner of a name. Thus, transferring a name effectively clears any existing authorisations, and new authorisations can be set in advance of an ownership transfer if desired.",
        "params": {
          "isAuthorised": "True if the address should be authorised, or false if it should be deauthorised.",
          "node": "The name to change the authorisation on.",
          "target": "The address that is to be authorised or deauthorised."
        }
      },
      "setContenthash(bytes32,bytes)": {
        "params": {
          "hash": "The contenthash to set",
          "node": "The node to update."
        }
      },
      "setInterface(bytes32,bytes4,address)": {
        "params": {
          "implementer": "The address of a contract that implements this interface for this node.",
          "interfaceID": "The EIP 168 interface ID.",
          "node": "The node to update."
        }
      },
      "setPubkey(bytes32,bytes32,bytes32)": {
        "params": {
          "node": "The ENS node to query",
          "x": "the X coordinate of the curve point for the public key.",
          "y": "the Y coordinate of the curve point for the public key."
        }
      },
      "setText(bytes32,string,string)": {
        "params": {
          "key": "The key to set.",
          "node": "The node to update.",
          "value": "The text data value to set."
        }
      },
      "text(bytes32,string)": {
        "params": {
          "key": "The text data key to query.",
          "node": "The ENS node to query."
        },
        "return": "The associated text data."
      }
    },
    "title": "ResolverV1"
  },
  "userdoc": {
    "methods": {
      "ABI(bytes32,uint256)": {
        "notice": "Returns the ABI associated with an ENS node. Defined in EIP205."
      },
      "addr(bytes32)": {
        "notice": "Returns the address associated with an RNS node."
      },
      "contenthash(bytes32)": {
        "notice": "Returns the contenthash associated with an ENS node."
      },
      "initialize(address)": {
        "notice": "Initializes the contract."
      },
      "interfaceImplementer(bytes32,bytes4)": {
        "notice": "Returns the address of a contract that implements the specified interface for this name. If an implementer has not been set for this interfaceID and name, the resolver will query the contract at `addr()`. If `addr()` is set, a contract exists at that address, and that contract implements EIP168 and returns `true` for the specified interfaceID, its address will be returned."
      },
      "pubkey(bytes32)": {
        "notice": "Returns the SECP256k1 public key associated with an ENS node. Defined in EIP 619."
      },
      "setABI(bytes32,uint256,bytes)": {
        "notice": "Sets the ABI associated with an ENS node. Nodes may have one ABI of each content type. To remove an ABI, set it to the empty string."
      },
      "setAddr(bytes32,address)": {
        "notice": "Sets the address associated with an RNS node."
      },
      "setAddr(bytes32,uint256,bytes)": {
        "notice": "Sets the coin address associated with an RNS node ."
      },
      "setContenthash(bytes32,bytes)": {
        "notice": "Sets the contenthash associated with an ENS node. May only be called by the owner of that node in the ENS registry."
      },
      "setInterface(bytes32,bytes4,address)": {
        "notice": "Sets an interface associated with a name. Setting the address to 0 restores the default behaviour of querying the contract at `addr()` for interface support."
      },
      "setPubkey(bytes32,bytes32,bytes32)": {
        "notice": "Sets the SECP256k1 public key associated with an ENS node."
      },
      "setText(bytes32,string,string)": {
        "notice": "Sets the text data associated with an ENS node and key. May only be called by the owner of that node in the ENS registry."
      },
      "text(bytes32,string)": {
        "notice": "Returns the text data associated with an ENS node and key."
      }
    }
  }
}